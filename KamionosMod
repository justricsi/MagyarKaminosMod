#include <a_samp>
#include <a_mysql>
#include <ZCMD>
#include <sscanf2>
#include <fixchars.h>

#pragma tabsize 0

#define GMN       "MagyarKamionosMÃ³d 0.1"

#define WHITE     0xFFFFFFAA
#define GREY      0xAFAFAFAA
#define RED       0xFF0000AA
#define YELLOW    0xFFFF00FF
#define LIGHTBLUE 0x33CCFFAA
#define BLUE      0x0000FFFF
#define GREEN     0x33AA33AA
#define ORANGE    0xFF9900AA

#define SZERELO        100000
#define RENDOR         100001
#define KAMIONOS       100002
#define UDITOS         100003
#define UDITOSMEGRAKOD 1000031

#define MAX_CONVOY 5
#define MAX_CONVOY_TAG 10
#define MAX_VEHICLE 10000
#define MAX_FUVAR   100000
#define FUVMENT 99

//#define PRESSED(%0) \(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
//#define RELEASED(%0) \(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

new PlayerTimer[MAX_PLAYERS];
new kapcs, query[2000];
new ObjektCount=0;
new AutoCount=0;
new HazCount=0;
new kamdb = 0;
new fuvardb = 0;
new SorompoID=0;
new ConvoyDB=0;
new RestartTime;
new Sorompok[MAX_OBJECTS];
new jatekosMeghalt[MAX_PLAYERS];
new bool:isinconvoy[MAX_PLAYERS];
new bool:vanconvoy[MAX_PLAYERS];
new bool:buntiszabad[MAX_PLAYERS] = true; // trafi
new classenable[MAX_PLAYERS];
new regiConvoyStat[MAX_PLAYERS] = 0;
new regiSzereloStat[MAX_PLAYERS] = 0;
new regiRendorStat[MAX_PLAYERS] = 0;
new playerBoltElott[MAX_PLAYERS];
new rakomanyModelid[MAX_PLAYERS][10];
new vanHaza[MAX_PLAYERS][1];
new FuvarKiszalltTimerMehet[MAX_PLAYERS][1];
new MaxFuel = 2400;

// gps
new Text:gps[MAX_PLAYERS];

enum GPSInfo
{
	zone_name[30],
    Float:zone_minx,
    Float:zone_miny,
    Float:zone_minz,
    Float:zone_maxx,
    Float:zone_maxy,
    Float:zone_maxz
}

new Float:Zones[][GPSInfo] = {
{ "'The Big Ear'",                -410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00},
{ "Aldea Malvada",               -1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00},
{ "Angel Pine",                  -2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00},
{ "Arco del Oeste",               -901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00},
{ "Avispa Country Club",         -2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00},
{ "Avispa Country Club",         -2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00},
{ "Avispa Country Club",         -2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00},
{ "Avispa Country Club",         -2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10},
{ "Avispa Country Club",         -2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10},
{ "Avispa Country Club",         -2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70},
{ "Back o Beyond",               -1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00},
{ "Battery Point",               -2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00},
{ "Bayside",                     -2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00},
{ "Bayside Marina",              -2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00},
{ "Beacon Hill",                  -399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50},
{ "Blackfield",                    964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90},
{ "Blackfield",                    964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90},
{ "Blackfield Chapel",            1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90},
{ "Blackfield Chapel",            1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90},
{ "Blackfield Intersection",      1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90},
{ "Blackfield Intersection",      1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90},
{ "Blackfield Intersection",      1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90},
{ "Blackfield Intersection",      1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90},
{ "Blueberry",                     104.50,  -220.10,     2.30,   349.60,   152.20,   200.00},
{ "Blueberry",                      19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00},
{ "Blueberry Acres",              -319.60,  -220.10,     0.00,   104.50,   293.30,   200.00},
{ "Caligula's Palace",            2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90},
{ "Caligula's Palace",            2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90},
{ "Calton Heights",              -2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00},
{ "Chinatown",                   -2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00},
{ "City Hall",                   -2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00},
{ "Come-A-Lot",                   2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90},
{ "Commerce",                     1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90},
{ "Commerce",                     1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90},
{ "Commerce",                     1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90},
{ "Commerce",                     1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90},
{ "Commerce",                     1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90},
{ "Commerce",                     1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90},
{ "Conference Center",            1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90},
{ "Conference Center",            1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90},
{ "Cranberry Station",           -2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00},
{ "Creek",                        2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90},
{ "Dillimore",                     580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00},
{ "Doherty",                     -2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00},
{ "Doherty",                     -2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00},
{ "Downtown",                    -1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00},
{ "Downtown",                    -1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00},
{ "Downtown",                    -1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00},
{ "Downtown",                    -1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00},
{ "Downtown",                    -2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00},
{ "Downtown",                    -1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00},
{ "Downtown Los Santos",          1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90},
{ "Downtown Los Santos",          1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90},
{ "Downtown Los Santos",          1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90},
{ "Downtown Los Santos",          1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90},
{ "Downtown Los Santos",          1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90},
{ "Downtown Los Santos",          1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90},
{ "Downtown Los Santos",          1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90},
{ "Downtown Los Santos",          1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90},
{ "Downtown Los Santos",          1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90},
{ "East Beach",                   2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90},
{ "East Beach",                   2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90},
{ "East Beach",                   2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90},
{ "East Beach",                   2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90},
{ "East Los Santos",              2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90},
{ "East Los Santos",              2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90},
{ "East Los Santos",              2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90},
{ "East Los Santos",              2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90},
{ "East Los Santos",              2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90},
{ "East Los Santos",              2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90},
{ "East Los Santos",              2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90},
{ "Easter Basin",                -1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00},
{ "Easter Basin",                -1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00},
{ "Easter Bay Airport",          -1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00},
{ "Easter Bay Airport",          -1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00},
{ "Easter Bay Airport",          -1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00},
{ "Easter Bay Airport",          -1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00},
{ "Easter Bay Airport",          -1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00},
{ "Easter Bay Airport",          -1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40},
{ "Easter Bay Airport",          -1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40},
{ "Easter Bay Airport",          -1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40},
{ "Easter Bay Chemicals",        -1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00},
{ "Easter Bay Chemicals",        -1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00},
{ "El Castillo del Diablo",       -464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00},
{ "El Castillo del Diablo",       -208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00},
{ "El Castillo del Diablo",       -208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00},
{ "El Corona",                    1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90},
{ "El Corona",                    1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90},
{ "El Quebrados",                -1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00},
{ "Esplanade East",              -1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00},
{ "Esplanade East",              -1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00},
{ "Esplanade East",              -1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30},
{ "Esplanade North",             -2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00},
{ "Esplanade North",             -1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00},
{ "Esplanade North",             -1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00},
{ "Fallen Tree",                  -792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00},
{ "Fallow Bridge",                 434.30,   366.50,     0.00,   603.00,   555.60,   200.00},
{ "Fern Ridge",                    508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00},
{ "Financial",                   -1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00},
{ "Fisher's Lagoon",              1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00},
{ "Flint Intersection",           -187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90},
{ "Flint Range",                  -594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00},
{ "Fort Carson",                  -376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00},
{ "Foster Valley",               -2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00},
{ "Foster Valley",               -2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00},
{ "Foster Valley",               -2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00},
{ "Foster Valley",               -2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00},
{ "Frederick Bridge",             2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00},
{ "Gant Bridge",                 -2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00},
{ "Gant Bridge",                 -2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00},
{ "Ganton",                       2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90},
{ "Ganton",                       2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90},
{ "Garcia",                      -2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00},
{ "Garcia",                      -2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00},
{ "Garver Bridge",               -1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90},
{ "~yGarver Bridge",               -1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90},
{ "Garver Bridge",               -1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30},
{ "Glen Park",                    1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90},
{ "Glen Park",                    1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90},
{ "Glen Park",                    1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90},
{ "Green Palms",                   176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00},
{ "Greenglass College",            964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90},
{ "Greenglass College",            964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90},
{ "Hampton Barns",                 603.00,   264.30,     0.00,   761.90,   366.50,   200.00},
{ "Hankypanky Point",             2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00},
{ "Harry Gold Parkway",           1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90},
{ "Hashbury",                    -2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00},
{ "Hilltop Farm",                  967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00},
{ "Hunter Quarry",                 337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70},
{ "Idlewood",                     1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90},
{ "Idlewood",                     1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90},
{ "Idlewood",                     1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90},
{ "Idlewood",                     1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90},
{ "Idlewood",                     2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90},
{ "Idlewood",                     1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90},
{ "Jefferson",                    1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90},
{ "Jefferson",                    2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90},
{ "Jefferson",                    2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90},
{ "Jefferson",                    2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90},
{ "Jefferson",                    2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90},
{ "Jefferson",                    2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90},
{ "Julius Thruway East",          2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90},
{ "Julius Thruway East",          2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90},
{ "Julius Thruway East",          2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90},
{ "Julius Thruway East",          2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90},
{ "Julius Thruway North",         2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90},
{ "Julius Thruway North",         2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90},
{ "Julius Thruway North",         2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90},
{ "Julius Thruway North",         1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90},
{ "Julius Thruway North",         1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90},
{ "Julius Thruway North",         1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90},
{ "Julius Thruway North",         1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90},
{ "Julius Thruway North",         1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90},
{ "Julius Thruway South",         1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90},
{ "Julius Thruway South",         2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90},
{ "Julius Thruway West",          1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90},
{ "Julius Thruway West",          1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90},
{ "Juniper Hill",                -2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00},
{ "Juniper Hollow",              -2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00},
{ "K.A.C.C. Military Fuels",      2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90},
{ "Kincaid Bridge",              -1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90},
{ "Kincaid Bridge",              -1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90},
{ "Kincaid Bridge",              -1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90},
{ "King's",                      -2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00},
{ "King's",                      -2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00},
{ "King's",                      -2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00},
{ "LVA Freight Depot",            1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90},
{ "LVA Freight Depot",            1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90},
{ "LVA Freight Depot",            1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90},
{ "LVA Freight Depot",            1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90},
{ "LVA Freight Depot",            1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90},
{ "Las Barrancas",                -926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00},
{ "Las Brujas",                   -365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00},
{ "Las Colinas",                  1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90},
{ "Las Colinas",                  2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90},
{ "Las Colinas",                  2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90},
{ "Las Colinas",                  2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90},
{ "Las Colinas",                  2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90},
{ "Las Colinas",                  2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90},
{ "Las Colinas",                  2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90},
{ "Las Payasadas",                -354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00},
{ "Las Venturas Airport",         1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90},
{ "Las Venturas Airport",         1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90},
{ "Las Venturas Airport",         1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90},
{ "Las Venturas Airport",         1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50},
{ "Last Dime Motel",              1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90},
{ "Leafy Hollow",                -1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00},
{ "Lil' Probe Inn",                -90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00},
{ "Linden Side",                  2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90},
{ "Linden Station",               2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90},
{ "Linden Station",               2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40},
{ "Little Mexico",                1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90},
{ "Little Mexico",                1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90},
{ "Los Flores",                   2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90},
{ "Los Flores",                   2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90},
{ "Los Santos International",     1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90},
{ "Los Santos International",     1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90},
{ "Los Santos International",     1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90},
{ "Los Santos International",     1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90},
{ "Los Santos International",     1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90},
{ "Los Santos International",     2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90},
{ "Marina",                        647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90},
{ "Marina",                        647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90},
{ "Marina",                        807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90},
{ "Market",                        787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90},
{ "Market",                        952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90},
{ "Market",                       1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90},
{ "Market",                        926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90},
{ "Market Station",                787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80},
{ "Martin Bridge",                -222.10,   293.30,     0.00,  -122.10,   476.40,   200.00},
{ "Missionary Hill",             -2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00},
{ "Montgomery",                   1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00},
{ "Montgomery",                   1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00},
{ "Montgomery Intersection",      1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00},
{ "Montgomery Intersection",      1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00},
{ "Mulholland",                   1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90},
{ "Mulholland",                   1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90},
{ "Mulholland",                   1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90},
{ "Mulholland",                   1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90},
{ "Mulholland",                   1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90},
{ "Mulholland",                   1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90},
{ "Mulholland",                    768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90},
{ "Mulholland",                    687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90},
{ "Mulholland",                    737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90},
{ "Mulholland",                   1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90},
{ "Mulholland",                    952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90},
{ "Mulholland",                    911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90},
{ "Mulholland",                    861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90},
{ "Mulholland Intersection",      1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90},
{ "North Rock",                   2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00},
{ "Ocean Docks",                  2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90},
{ "Ocean Docks",                  2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90},
{ "Ocean Docks",                  2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90},
{ "Ocean Docks",                  2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90},
{ "Ocean Docks",                  2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90},
{ "Ocean Docks",                  2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90},
{ "Ocean Docks",                  2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90},
{ "Ocean Flats",                 -2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00},
{ "Ocean Flats",                 -2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00},
{ "Ocean Flats",                 -2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00},
{ "Octane Springs",                338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00},
{ "Old Venturas Strip",           2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90},
{ "Palisades",                   -2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00},
{ "Palomino Creek",               2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00},
{ "Paradiso",                    -2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00},
{ "Pershing Square",              1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90},
{ "Pilgrim",                      2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90},
{ "Pilgrim",                      2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90},
{ "Pilson Intersection",          1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90},
{ "Pirates in Men's Pants",       1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90},
{ "Playa del Seville",            2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90},
{ "Prickle Pine",                 1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90},
{ "Prickle Pine",                 1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90},
{ "Prickle Pine",                 1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90},
{ "Prickle Pine",                 1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90},
{ "Queens",                      -2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00},
{ "Queens",                      -2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00},
{ "Queens",                      -2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00},
{ "Randolph Industrial Estate",   1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90},
{ "Redsands East",                1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90},
{ "Redsands East",                1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90},
{ "Redsands East",                1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90},
{ "Redsands West",                1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90},
{ "Redsands West",                1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90},
{ "Redsands West",                1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90},
{ "Redsands West",                1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90},
{ "Regular Tom",                  -405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00},
{ "Richman",                       647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90},
{ "Richman",                       647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90},
{ "Richman",                       225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90},
{ "Richman",                       225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90},
{ "Richman",                        72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90},
{ "Richman",                        72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90},
{ "Richman",                       321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90},
{ "Richman",                       321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90},
{ "Richman",                       321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90},
{ "Richman",                       321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90},
{ "Robada Intersection",         -1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90},
{ "Roca Escalante",               2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90},
{ "Roca Escalante",               2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90},
{ "Rockshore East",               2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90},
{ "Rockshore West",               1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90},
{ "Rockshore West",               2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90},
{ "Rodeo",                          72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90},
{ "Rodeo",                          72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90},
{ "Rodeo",                         225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90},
{ "Rodeo",                         225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90},
{ "Rodeo",                         334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90},
{ "Rodeo",                         312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90},
{ "Rodeo",                         422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90},
{ "Rodeo",                         558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90},
{ "Rodeo",                         466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90},
{ "Rodeo",                         422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90},
{ "Rodeo",                         466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90},
{ "Rodeo",                         334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90},
{ "Royal Casino",                 2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90},
{ "San Andreas Sound",            2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00},
{ "Santa Flora",                 -2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00},
{ "Santa Maria Beach",             342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90},
{ "Santa Maria Beach",              72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90},
{ "Shady Cabin",                 -1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00},
{ "Shady Creeks",                -1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00},
{ "Shady Creeks",                -2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00},
{ "Sobell Rail Yards",            2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90},
{ "Spinybed",                     2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90},
{ "Starfish Casino",              2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90},
{ "Starfish Casino",              2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90},
{ "Starfish Casino",              2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90},
{ "Temple",                       1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90},
{ "Temple",                       1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90},
{ "Temple",                       1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90},
{ "Temple",                        952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90},
{ "Temple",                       1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90},
{ "Temple",                       1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90},
{ "The Camel's Toe",              2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90},
{ "The Clown's Pocket",           2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90},
{ "The Emerald Isle",             2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90},
{ "The Farm",                    -1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90},
{ "The Four Dragons Casino",      1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90},
{ "The High Roller",              1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90},
{ "The Mako Span",                1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00},
{ "The Panopticon",               -947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00},
{ "The Pink Swan",                1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90},
{ "The Sherman Dam",              -968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00},
{ "The Strip",                    2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90},
{ "The Strip",                    2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90},
{ "The Strip",                    2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90},
{ "The Strip",                    2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90},
{ "The Visage",                   1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90},
{ "The Visage",                   1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90},
{ "Unity Station",                1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50},
{ "Valle Ocultado",               -936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00},
{ "Verdant Bluffs",                930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90},
{ "Verdant Bluffs",               1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90},
{ "Verdant Bluffs",               1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90},
{ "Verdant Meadows",                37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00},
{ "Verona Beach",                  647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90},
{ "Verona Beach",                  930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90},
{ "Verona Beach",                  851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90},
{ "Verona Beach",                 1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90},
{ "Verona Beach",                 1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90},
{ "Vinewood",                      787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90},
{ "Vinewood",                      787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90},
{ "Vinewood",                      647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90},
{ "Vinewood",                      647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90},
{ "Whitewood Estates",             883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90},
{ "Whitewood Estates",            1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90},
{ "Willowfield",                  1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90},
{ "Willowfield",                  2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90},
{ "Willowfield",                  2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90},
{ "Willowfield",                  2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90},
{ "Willowfield",                  2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90},
{ "Willowfield",                  2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90},
{ "Willowfield",                  2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90},
{ "~~Yellow Bell Station",          1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00},
// Main Zones
{ "Los Santos",                     44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00},
{ "Las Venturas",                  869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00},
{ "Bone County",                  -480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00},
{ "Tierra Robada",               -2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00},
{ "Tierra Robada",               -1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00},
{ "San Fierro",                  -2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00},
{ "Red County",                  -1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00},
{ "Flint County",                -1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00},
{ "Whetstone",                   -2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}
};

new GPS_Spawned[MAX_PLAYERS];
//gps

enum BuyCars
{
	CarName[50],
	CarModel,
	Price
}

new ABuyableVehicles[][BuyCars] =
{
	{"Admiral", 445, 50000},
	{"Alpha",602, 200000},
	{"Ambulance",416, 150000},
	{"Andromada", 592, 50000},
	{"Article Trailer",591, 50000},
//	{"AT400", VClassPlane, 577, 50000},
	{"Baggage",485, 50000},
	{"Baggage Trailer A",606, 50000},
	{"Baggage Trailer B",607, 50000},
	{"Bandito",568, 50000},
	{"Banshee",429, 50000},
	{"Barracks",433, 50000},
	{"Beagle",511, 50000},
	{"Benson",499, 50000},
	{"Berkley's RC Van", 459, 50000},
	{"BF Injection",424, 50000},
	{"BF-400",581, 50000},
	{"Bike",509, 50000},
	{"Blade",536, 50000},
	{"Blista Compact",496, 50000},
	{"Bloodring Banger",504, 50000},
	{"BMX",481, 50000},
	{"Bobcat",422, 50000},
	{"Boxville 1", 498, 50000},
	{"Boxville 2",609, 50000},
	{"Bravura",401, 50000},
	{"Broadway",575, 50000},
//	{"Brownstreak (train)", VClassUnique, 538, 50000},
	{"Buccaneer",518, 50000},
	{"Buffalo",402, 50000},
	{"Bullet", 541, 50000},
	{"Burrito",482, 50000},
	{"Bus",431, 50000},
	{"Cabbie",438, 50000},
	{"Caddy",457, 50000},
	{"Cadrona",527, 50000},
	{"Camper",483, 50000},
	{"Cargo Trailer",435, 50000},
	{"Cargobob",548, 50000},
	{"Cement Truck",524, 50000},
	{"Cheetah",415, 50000},
	{"Clover",542, 50000},
	{"Club",589, 50000},
	{"Coach",437, 50000},
	{"Coastguard",472, 50000},
	{"Combine Harvester",532, 50000},
	{"Comet",480, 50000},
	{"Cropduster",512, 50000},
	{"DFT-30", 578, 50000},
	{"Dinghy",473, 50000},
	{"Dodo",593, 50000},
	{"Dozer",486, 50000},
	{"Dumper",406, 50000},
	{"Dune",573, 50000},
	{"Elegant",507, 50000},
	{"Elegy",562, 50000},
	{"Emperor",585, 50000},
	{"Enforcer",427, 50000},
	{"Esperanto",419, 50000},
	{"Euros",587, 50000},
	{"Faggio",462, 50000},
	{"Farm Trailer",610, 50000},
	{"FBI Rancher", 490, 50000},
	{"FBI Truck",528, 50000},
	{"FCR-900",521, 50000},
	{"Feltzer",533, 50000},
	{"Firetruck",407, 50000},
	{"Firetruck LA", 544, 50000},
	{"Flash",565, 50000},
	{"Flatbed",455, 50000},
	{"Fluids Trailer",584, 50000},
	{"Forklift",530, 50000},
	{"Fortune",526, 50000},
	{"Freeway",463, 50000},
//	{"Freight (train)", VClassUnique, 537, 50000},
//	{"Freight Box Trailer (train)", VClassTrailer, 590, 50000},
//	{"Freight Flat Trailer (train)", VClassTrailer, 569, 50000},
	{"Glendale",466, 50000},
	{"Glendale Shit",604, 50000},
	{"Greenwood",492, 50000},
	{"Hermes",474, 50000},
	{"Hotdog",588, 50000},
	{"Hotknife",434, 50000},
	{"Hotring Racer 1",494, 50000},
	{"Hotring Racer 2",502, 50000},
	{"Hotring Racer 3", 503, 50000},
	{"HPV1000",523, 50000},
	{"Hunter",425, 50000},
	{"Huntley",579, 50000},
	{"Hustler",545, 50000},
	{"Hydra",520, 50000},
	{"Infernus",411, 50000},
	{"Intruder",546, 50000},
	{"Jester",559, 50000},
	{"Jetmax",493, 50000},
	{"Journey", 508, 50000},
	{"Kart",571, 50000},
	{"Landstalker",400, 50000},
	{"Launch",595, 50000},
	{"Leviathan",417, 50000},
	{"Linerunner",403, 50000},
	{"Majestic",517, 50000},
	{"Manana",410, 50000},
	{"Marquis",484, 50000},
	{"Maverick",487, 50000},
	{"Merit",551, 50000},
	{"Mesa",500, 50000},
	{"Monster",444, 50000},
	{"Monster A", 556, 50000},
	{"Monster B",557, 50000},
	{"Moonbeam",418, 50000},
	{"Mountain Bike", 510, 50000},
	{"Mower",572, 50000},
	{"Mr Whoopee",423, 50000},
	{"Mule", 414, 50000},
	{"Nebula",516, 50000},
	{"Nevada", 553, 50000},
	{"Newsvan", 582, 50000},
	{"NRG-500",522, 50000},
	{"Oceanic", 467, 50000},
	{"Ore Trailer", 450, 50000},
	{"Packer", 443, 50000},
	{"Patriot", 470, 50000},
	{"PCJ-600", 461, 50000},
	{"Perenniel", 404, 50000},
	{"Phoenix", 603, 50000},
	{"Picador", 600, 50000},
	{"Pizzaboy", 448, 50000},
	{"Police Car (LSPD)",596, 50000},
	{"Police Car (LVPD)", 598, 50000},
	{"Police Car (SFPD)", 597, 50000},
	{"Police Maverick", 497, 50000},
	{"Police Ranger", 599, 50000},
	{"Pony", 413, 50000},
	{"Predator",430, 50000},
	{"Premier", 426, 50000},
	{"Previon",436, 50000},
	{"Primo", 547, 50000},
	{"Quad", 471, 50000},
	{"Raindance", 563, 50000},
	{"Rancher 1", 489, 50000},
	{"Rancher 2", 505, 50000},
//	{"RC Bandit", VClassRCVehicle, 441, 50000},
//	{"RC Baron", VClassRCVehicle, 464, 50000},
//	{"RC Cam", VClassRCVehicle, 594, 50000},
//	{"RC Goblin", VClassRCVehicle, 501, 50000},
//	{"RC Raider", VClassRCVehicle, 465, 50000},
//	{"RC Tiger", VClassRCVehicle, 564, 50000},
	{"Reefer", 453, 50000},
	{"Regina",479, 50000},
	{"Remington",534, 50000},
	{"Rhino", 432, 50000},
	{"Roadtrain", 515, 50000},
	{"Romero",442, 50000},
	{"Rumpo",440, 50000},
	{"Rustler",476, 50000},
	{"Sabre",475, 50000},
	{"Sadler", 543, 50000},
	{"Sadler Shit", 605, 50000},
	{"SAN News Maverick", 488, 50000},
	{"Sanchez", 468, 50000},
	{"Sandking",495, 50000},
	{"Savanna",567, 50000},
	{"Seasparrow",447, 50000},
	{"Securicar",428, 50000},
	{"Sentinel", 405, 50000},
	{"Shamal",519, 50000},
	{"Skimmer",460, 50000},
	{"Slamvan", 535, 50000},
	{"Solair", 458, 50000},
	{"Sparrow",469, 50000},
	{"Speeder", 452, 50000},
	{"Squallo", 446, 50000},
	{"Stafford",580, 50000},
	{"Stallion",439, 50000},
	{"Stratum",561, 50000},
//	{"Streak Trailer (train)", VClassTrailer, 570, 50000},
	{"Stretch",409, 50000},
	{"Stuntplane",513, 50000},
	{"Sultan",560, 50000},
	{"Sunrise", 550, 50000},
	{"Super GT", 506, 50000},
	{"S.W.A.T.", 601, 50000},
	{"Sweeper", 574, 50000},
	{"Tahoma",  566, 50000},
	{"Tampa",  549, 50000},
	{"Tanker", 514, 50000},
	{"Taxi",  420, 50000},
	{"Tornado",  576, 50000},
	{"Towtruck",525, 50000},
	{"Tractor",531, 50000},
//	{"Tram", VClassUnique, 449, 50000},
	{"Trashmaster",408, 50000},
	{"Tropic",  454, 50000},
	{"Tug",  583, 50000},
	{"Tug Stairs Trailer",  608, 50000},
	{"Turismo", 451, 50000},
	{"Uranus", 558, 50000},
	{"Utility Trailer",611, 50000},
	{"Utility Van",  552, 50000},
	{"Vincent",540, 50000},
	{"Virgo",  491, 50000},
	{"Voodoo",  412, 50000},
	{"Vortex",  539, 50000},
	{"Walton",  478, 50000},
	{"Washington", 421, 50000},
	{"Wayfarer", 586, 50000},
	{"Willard",  529, 50000},
	{"Windsor",  555, 50000},
    {"Yankee",  456, 50000},
	{"Yosemite",  554, 50000},
	{"ZR-350",  477, 50000}
};

/*VehicleBuyable_GetIndex(vModel)
{
	// Loop through all vehicles in the ABuyableVehicles array
	for (new i; i < sizeof(ABuyableVehicles); i++)
	{
	    // Check if the model of the current vehicle is the same as the given model
		if (ABuyableVehicles[i][CarModel] == vModel)
		    return i; // Return the index of the array where the carmodel was found
	}

	return -1;
}*/

main()
{
	print("\n-----------------------------------------");
	print("Szerver elindÃ­tva by Justricsi & Devidson");
	print("-----------------------------------------\n");
	mysql_log(LOG_ALL, LOG_TYPE_HTML);
	kapcs = mysql_connect("localhost", "root", "samp", "");
	if(mysql_errno(kapcs) != 0) printf("MySQL hiba! HibakÃ³d: %d", mysql_errno(kapcs));
	mysql_tquery(kapcs, "SELECT * FROM `objects`","ObjectLoad"); 				//Objektumok betÃ¶ltÃ©se
	mysql_tquery(kapcs, "SELECT * FROM `autok`","AutoLoad"); 					//AutÃ³k betÃ¶ltÃ©se
	mysql_tquery(kapcs, "SELECT * FROM `scam`","KamLoad"); 					    //KamerÃ¡k betÃ¶ltÃ©se
	mysql_tquery(kapcs, "SELECT * FROM `fuvarok`","FuvarLoad");                 //Fuvarok betÃ¶ltÃ©se
 	mysql_tquery(kapcs, "SELECT H.id, H.tulaj, H.h_x, H.h_y, H.h_z, H.ih_x, H.ih_y, H.ih_z, H.interior, H.ar, H.pickupID, J.nev FROM hazak H JOIN jatekosok J ON H.tulaj = J.ID","HazLoad");
}

enum eAutoInfo{
	ID,
	Price,
	rszam[8],
	model,
	Tulaj[24],
	Float:X,
	Float:Y,
	Float:Z,
	Float:Angle,
	color1,
	color2,
    Float:d,
    Float:elox1,
    Float:eloy1,
    Float:eloz1,
    Float:ujx2,
    Float:ujy2,
    Float:ujz2,
   	Text:SpeedText,
	Text:FuelText,
	Text:StatText,
	SebessegTimer,
	BenzinTimer,
	StatTimer,
	JatekosSebesseg,
	Fuel
}
new AutoInfo[MAX_VEHICLES][eAutoInfo];

enum eJatekosInfo {
	Nev[25],
	db_id,
	Penz,
	Skin,
	Float:X,
	Float:Y,
	Float:Z,
	alevel,
	ConvoyMunkak,
	SzereloMunkak,
	RendorMunkak,
	BankMoney,
	buntetes,
	ElsoTizKocsi
}
new JatekosInfo[MAX_PLAYERS][eJatekosInfo];

enum Object
{
	id,
	modelID,
	Float:xCor,
	Float:yCor,
	Float:zCor,
    Float:rxCor,
    Float:ryCor,
    Float:rzCor
}
new Objektumok[MAX_OBJECTS][Object];

enum Hazak
{
	Float:h_x,
	Float:h_y,
	Float:h_z,
	Float:ih_x,
	Float:ih_y,
    Float:ih_z,
    interior,
    tulaj[MAX_PLAYER_NAME],
    h_ar,
    h_id,
    h_pickup,
    pickupid,
    tulaj_id,
    Text3D:h_text
}
new HazInfo[100][Hazak];

enum Kamerak
{
	camID,
	Float:c_x,
	Float:c_y,
	Float:c_z,
	Float:c_angle,
	sebesseg
}
new KamInfo[100][Kamerak];

enum Fuvarok
{
	id,
	models,
	Float:h_x,
	Float:h_y,
	Float:h_z,
	Float:c_x,
	Float:c_y,
	Float:c_z,
	Float:tav,
	h_t[130],
	c_t[130]
}
new FuvarInfo[100][Fuvarok];
new FuvarSeged[MAX_PLAYERS][100][1];

enum
{
	d_reg,
	d_belep,
	fuvar,
	automatak,
	munka,
	stat,
	DialogBank,
	DialogBankDeposit,
	DialogBankWithdraw,
	DialogAutoKer,
	DialogMunkak,
	DialogAutok
} //Dialogok automatikus szÃ¡mozÃ¡sa.

enum ValasztottAutomata
{
	Float:xCor,
	Float:yCor,
	Float:zCor
}

new KivalasztottAutomata[MAX_PLAYERS][ValasztottAutomata];

enum pTime
{
    Mp,
    Perc,
    Ora,
    Nap
}
new PlayerTime[MAX_PLAYERS][pTime];

new Float:JailSpawnPoints[][4] =
{
{197.80000305176, 174.60000610352, 1004.0, 269.1425},
{193.30000305176, 174.80000305176, 1004.0, 269.1425},
{198.5, 162.5, 1002.299987793, 269.1425}
};

public OnGameModeInit()
{
	ManualVehicleEngineAndLights();
	UsePlayerPedAnims();         			//NormÃ¡l futÃ¡s
	DisableInteriorEnterExits(); 			//Interior kikapcs
	EnableStuntBonusForAll(0);              //ugratÃ³ pÃ©nz kikapcs
	SetGameModeText(GMN);

	//gps
	SetTimer("GPS", 500, 1);

    for(new i=0; i<MAX_PLAYERS; i++)
	{
  	 	gps[i] = TextDrawCreate(501.000000,6.000000,"GPS");
		TextDrawAlignment(gps[i],0);
		TextDrawBackgroundColor(gps[i],0x000000ff);
		TextDrawFont(gps[i],2);
		TextDrawLetterSize(gps[i],0.199999,1.100000);
		TextDrawColor(gps[i],0xffffffff);
		TextDrawSetOutline(gps[i],1);
		TextDrawSetProportional(gps[i],1);
	}
	//gps
	
	for(new i=0; i < MAX_VEHICLES; i++)
	{
        AutoInfo[i][Fuel] = MaxFuel;
	}
    return 1;
}

public OnGameModeExit()
{
        mysql_close(kapcs); //LezÃ¡rjuk a kapcsolatot
        return 1;
}

public OnPlayerConnect(playerid)
{
        TogglePlayerSpectating(playerid, true);                                                   //eltuntetjÃ¼k a spawn gombot.
        for(new a; eJatekosInfo:a < eJatekosInfo; a++) JatekosInfo[playerid][eJatekosInfo:a] = 0; //NullÃ¡zzuk az enumjait
        GetPlayerName(playerid, JatekosInfo[playerid][Nev], 25);                                  //LekÃ©rjÃ¼k a nevÃ©t.
        if(strfind(JatekosInfo[playerid][Nev], "_") == -1)                                        //Nem tartalmaz alsÃ³vonÃ¡st.
        for(new a; a < strlen(JatekosInfo[playerid][Nev]); a++) if(JatekosInfo[playerid][Nev][a] == '_') JatekosInfo[playerid][Nev][a] = ' ';//VÃ©gigfutunk a nevÃ©n. Ha az egyik karaktere '_', kicserÃ©li ' '-re.
        mysql_format(kapcs, query, 256, "SELECT ID,Nev FROM jatekosok WHERE Nev='%e' LIMIT 1", JatekosInfo[playerid][Nev]);
        mysql_tquery(kapcs, query, "RegEllenorzes", "d", playerid);

        //Remove objects
		RemoveBuildingForPlayer(playerid, -1, 2497.2419, 2773.3716, 12.86726,7.3802581);
		RemoveBuildingForPlayer(playerid, 7023, 2501.5156, 2781.2891, 9.82031,25.680471);
		RemoveBuildingForPlayer(playerid, 3474, 2523.9688, 2818.4922, 16.74219,16.442955);
		RemoveBuildingForPlayer(playerid, 7095,2545.5469,2751.3828,11.96094,82.376122);
	    RemoveBuildingForPlayer(playerid,700,2538.5078,2796.8672,10.09375,11.084518);
	    RemoveBuildingForPlayer(playerid,700,2552.1719,2796.8672,10.5625,11.084518);
	    RemoveBuildingForPlayer(playerid,700,2564.8516,2796.8672,10.49219,11.084518);
	    RemoveBuildingForPlayer(playerid,700,2578.7031,2796.8672,10.22656,11.084518);
	    RemoveBuildingForPlayer(playerid,700,2591.2031,2796.8672,10.46875,11.084518);
	    RemoveBuildingForPlayer(playerid,1231,2528.8013,2764.3313,10.86391,4.951889);
	    RemoveBuildingForPlayer(playerid,1231,2528.8501,2742.76,11.11534,4.951889);
	    RemoveBuildingForPlayer(playerid,1231,2546.1042,2764.2834,11.26909,4.951889);
	    RemoveBuildingForPlayer(playerid,1231,2546.1831,2742.5449,11.21713,4.951889);
	    RemoveBuildingForPlayer(playerid,1231,2563.8267,2742.5947,10.73921,4.951889);
	    RemoveBuildingForPlayer(playerid,1231,2563.8491,2764.1013,10.81804,4.951889);
	    RemoveBuildingForPlayer(playerid,1231,2528.8894,2724.271,10.87956,4.951889);

		//Mapiconok
		SetPlayerMapIcon(playerid, 1, 2116.1753,919.9009,10.8168, 56, 0, MAPICON_LOCAL);
		SetPlayerMapIcon(playerid, 2, 2639.0347,1106.4211,10.8145, 56, 0, MAPICON_LOCAL);
		SetPlayerMapIcon(playerid, 3, 2202.4346,2473.9463,10.8035, 56, 0, MAPICON_LOCAL);
		SetPlayerMapIcon(playerid, 4, 2147.3462,2748.0212,10.8098, 56, 0, MAPICON_LOCAL);
		SetPlayerMapIcon(playerid, 5, 1596.6428,2198.7942,10.8044, 56, 0, MAPICON_LOCAL);
		SetPlayerMapIcon(playerid, 6, 615.3072,1689.8611,6.9801, 56, 0, MAPICON_LOCAL);
		SetPlayerMapIcon(playerid, 7, 2256.7107,2032.0468,11.2071, 45, 0, MAPICON_LOCAL);
		SetPlayerMapIcon(playerid, 8, 1658.5491,2199.5457,10.8203, 55, 0, MAPICON_GLOBAL); //Autoshop
		//Text Labelek
		Create3DTextLabel("/tankol\n\n450Ft/liter", YELLOW, 2116.1753,919.9009,10.8168, 40.0, 0, 0);
		Create3DTextLabel("/tankol\n\n450Ft/liter", YELLOW, 2639.0347,1106.4211,10.8145, 40.0, 0, 0);
		Create3DTextLabel("/tankol\n\n450Ft/liter", YELLOW, 2202.4346,2473.9463,10.8035, 40.0, 0, 0);
		Create3DTextLabel("/tankol\n\n450Ft/liter", YELLOW, 2147.3462,2748.0212,10.8098, 40.0, 0, 0);
		Create3DTextLabel("/tankol\n\n450Ft/liter", YELLOW, 1596.6428,2198.7942,10.8044, 40.0, 0, 0);
		Create3DTextLabel("/tankol\n\n450Ft/liter", YELLOW, 615.3072,1689.8611,6.9801, 40.0, 0, 0);

        CreatePickup(1274,1,1658.5491,2199.5457,10.8203,-1); // autoshop
        Create3DTextLabel("[AutÃ³ kereskedÃ©s]", YELLOW, 1658.5491,2199.5457,11.3, 40.0, 0, 0); //autoshop

		isinconvoy[playerid] = false;
		vanconvoy[playerid] = false;
		SetPlayerColor(playerid, YELLOW);
		PlayerTimer[playerid] = SetTimerEx("PlayedTime", 1000, 1, "%d", playerid);
		SetTimer("km_counter", 1000, true);
		GPS_Spawned[playerid] = 0;
		return 1;
}

stock Float:GetPlayerSpeed(playerid, bool:Zasd = true) //km.h
{
    new Float:SpeedX, Float:SpeedY, Float:SpeedZ;
    new Float:Speed;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid), SpeedX, SpeedY, SpeedZ);
    else GetPlayerVelocity(playerid, SpeedX, SpeedY, SpeedZ);
    if(Zasd) Speed = floatsqroot(floatadd(floatpower(SpeedX, 2.0), floatadd(floatpower(SpeedY, 2.0), floatpower(SpeedZ, 2.0))));
    else Speed = floatsqroot(floatadd(floatpower(SpeedX, 2.0), floatpower(SpeedY, 2.0)));
    Speed = floatround(Speed * 100 * 1.61);
    return Speed;
}

public OnVehicleSpawn( vehicleid )
{
    return 1;
}

forward km_counter(i,playerid);
public km_counter(i,playerid)
{
	new v;
	v = GetPlayerVehicleID(playerid);
    AutoInfo[i][elox1] = AutoInfo[i][ujx2];
    AutoInfo[i][eloy1] = AutoInfo[i][ujy2];
    AutoInfo[i][eloz1] = AutoInfo[i][ujz2];
    GetVehiclePos(v, AutoInfo[i][ujx2], AutoInfo[i][ujy2], AutoInfo[i][ujz2]);
    AutoInfo[i][elox1] -= AutoInfo[i][ujx2];
    AutoInfo[i][eloy1] -= AutoInfo[i][ujy2];
    AutoInfo[i][eloz1] -= AutoInfo[i][ujz2];
    AutoInfo[i][d] += floatsqroot((AutoInfo[i][elox1]*AutoInfo[i][elox1])+(AutoInfo[i][eloy1]*AutoInfo[i][eloy1])+(AutoInfo[i][eloz1]*AutoInfo[i][eloz1])) / 1000.0;
}

forward PlayedTime(playerid);
public PlayedTime(playerid)
{
    if(!IsPlayerConnected(playerid)) return 0;
    PlayerTime[playerid][Mp]++;

    if(PlayerTime[playerid][Mp] == 60)
    {
        PlayerTime[playerid][Perc]++;
            PlayerTime[playerid][Mp] = 0;
    }
    if(PlayerTime[playerid][Perc] == 60)
    {
        PlayerTime[playerid][Ora]++;
            PlayerTime[playerid][Perc] = 0;
    }
    if(PlayerTime[playerid][Ora] == 24)
    {
        PlayerTime[playerid][Nap]++;
            PlayerTime[playerid][Ora] = 0;
    }
    return 1;
}

forward RegEllenorzes(playerid);
public RegEllenorzes(playerid) {
        new sorok_szama = cache_get_row_count();
        if(sorok_szama == 0) ShowPlayerDialog(playerid, d_reg, DIALOG_STYLE_PASSWORD, "RegisztrÃ¡ciÃ³", "{FFFFFF}Ãdv a szerveren!\nMÃ©g nem regisztrÃ¡ltÃ¡l!\nKÃ©rlek adj meg egy jelszÃ³t!", "RegisztrÃ¡l", "KilÃ©p");
        else ShowPlayerDialog(playerid, d_belep, DIALOG_STYLE_PASSWORD, "BejelentkezÃ©s", "{FFFFFF}Ãdv a szerveren!\nMÃ¡r regisztrÃ¡ltÃ¡l!\n\nKÃ©rlek add meg a jelszavad, amivel regisztrÃ¡ltÃ¡lt!", "BelÃ©p", "KilÃ©p");
        return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
    JatekosMent(playerid);
    return 1;
}

forward JatekosMent(playerid);
public JatekosMent(playerid)
{
    GetPlayerPos(playerid, JatekosInfo[playerid][X], JatekosInfo[playerid][Y], JatekosInfo[playerid][Z]);
    JatekosInfo[playerid][Skin] = GetPlayerSkin(playerid);
    //JatekosInfo[playerid][Penz] = GetPlayerMoney(playerid);
    mysql_format(kapcs, query, 384, "UPDATE jatekosok SET Penz='%d',X='%f',Y='%f',Z='%f',alevel='%i',cmunka='%i',szmunka='%i',rmunka='%i' WHERE Nev='%s'",
	JatekosInfo[playerid][Penz], JatekosInfo[playerid][X], JatekosInfo[playerid][Y], JatekosInfo[playerid][Z],JatekosInfo[playerid][alevel],JatekosInfo[playerid][ConvoyMunkak],JatekosInfo[playerid][SzereloMunkak],JatekosInfo[playerid][RendorMunkak],JatekosInfo[playerid][Nev]);
    mysql_tquery(kapcs, query);
}

public OnPlayerSpawn(playerid)
{
	if(jatekosMeghalt[playerid] == 1) // This is checking if the player had died previously
	{
	    SetPlayerPos(playerid, 1607.2609, 1822.3566, 10.8203); // Replace X, Y, and Z With the Hospital Co-ords.
	    jatekosMeghalt[playerid] = 0; // This is saying the player is not dead.
 		SetPlayerSkin(playerid,JatekosInfo[playerid][Skin]);
	    return 1;
	}
	GPS_Spawned[playerid] = 1;
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	jatekosMeghalt[playerid] = 1;
	GPS_Spawned[playerid] = 0;
	//JatekosInfo[playerid][Skin] = cache_get_field_content_int(0, "skin",kapcs);
	//SetPlayerSkin(playerid,JatekosInfo[playerid][Skin]);
	//TogglePlayerSpectating(playerid, true);
 	//TogglePlayerSpectating(playerid, false);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
     if(!classenable[playerid]) return SetTimerEx("Call_Spawn", 350, false, "i", playerid);
     return 1;
}

forward Call_Spawn(playerid);
public Call_Spawn(playerid) return SpawnPlayer(playerid);

/*public OnPlayerRequestSpawn(playerid)
{
    TogglePlayerSpectating(playerid, true);
 	TogglePlayerSpectating(playerid, false);
    return 1;
}*/

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) // JAVÃTANI KELLL NEM BIZTOS HOGY JÃ!
{
new buntet[128];
if (((newkeys & KEY_ACTION) && !(oldkeys & KEY_ACTION)) && (GetPlayerVehicleID(playerid) != 0))
{
	if(GetPVarInt(playerid,"Frakcio") == RENDOR)
	{
	    new Float:Xpos,Float:Ypos,Float:Zpos;
		for(new i = 0; i <= GetPlayerPoolSize(); i++)
		{
			if(i != playerid)
			{
				GetPlayerPos(i, Xpos, Ypos, Zpos);
				if(IsPlayerInRangeOfPoint(playerid, 4.0, Xpos, Ypos, Zpos))
				{
				    if(JatekosInfo[i][buntetes] != 0)
					{
						JatekosInfo[playerid][Penz] += JatekosInfo[i][buntetes];
						JatekosInfo[i][Penz] -= JatekosInfo[i][buntetes];
						format(buntet,sizeof(buntet),"Levetted a bÃ¼ntetÃ©st: %i Ft-ot", JatekosInfo[i][buntetes]);
      					JatekosInfo[i][buntetes] = 0;
						mysql_format(kapcs, query, sizeof(query), "UPDATE jatekosok SET Penz = %i, buntetes = %i WHERE id = %i", JatekosInfo[i][Penz], JatekosInfo[i][buntetes], JatekosInfo[i][db_id]);
						mysql_tquery(kapcs, query);
						SendClientMessage(playerid,GREEN,buntet);
						SendClientMessage(i, ORANGE,"Egy rendÅr megbÃ¼ntetett!");
						SetPlayerColor(i, YELLOW);
						JatekosInfo[playerid][RendorMunkak] += 1;
					}else SendClientMessage(playerid,RED,"Nincs bÃ¼ntetÃ©se a jÃ¡tÃ©kosnak!");
				}else SendClientMessage(playerid,RED,"Nincs a kÃ¶zeledben a jÃ¡tÃ©kos!");
			}
		}
	}//else SendClientMessage(playerid,RED,"Nem vagy rendÅr!");
}

if ((((newkeys & KEY_SPRINT) && !(oldkeys & KEY_SPRINT)) || ((newkeys & KEY_JUMP) && !(oldkeys & KEY_JUMP))) && (GetPlayerVehicleID(playerid) != 0))
{
	new vehID = GetPlayerVehicleID(playerid);
    new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehID, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehID, VEHICLE_PARAMS_ON, 1, alarm, doors, bonnet, boot, objective);
}

return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid)
{
	Sebessegmero_Beallitas(playerid);
    //Sebessegmero_Frissites(playerid);
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_OFF, false, alarm, doors, bonnet, boot, objective);
	Sebessegmero_Torles(playerid);
	return 1;
}
/*
stock strmatch(const String1[], const String2[])
{
    if ((strcmp(String1, String2, true, strlen(String2)) == 0) && (strlen(String2) == strlen(String1)))
    {
        return true;
    }
    else
    {
        return false;
    }
}*/

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    switch(dialogid)
	{
            case d_reg: Dialog_Regisztracio(playerid, response, inputtext);
            case d_belep: Dialog_Belepes(playerid, response, inputtext);
            case automatak:Dialog_Automatas(playerid, response, listitem);
            case munka: Dialog_Munkak(playerid, response, listitem);
			case fuvar: Dialog_Fuvar(playerid, response, listitem);
			case DialogBank: Dialog_BankOptions(playerid, response, listitem);
			case DialogBankDeposit: Dialog_BankDeposit(playerid, response, inputtext);
			case DialogBankWithdraw: Dialog_BankWithdraw(playerid, response, inputtext);
			case DialogAutoKer: Dialog_DialogAutoKer(playerid, response, listitem);
			case DialogAutok: Dialog_AutoKereskedes(playerid, response, listitem);
			case DialogMunkak: Dialog_Munka(playerid, response, listitem);
    }
    return 0;
}
new bool: utdijfizet[MAX_PLAYERS] = true;
public OnPlayerUpdate(playerid)
{

	if(regiConvoyStat[playerid] < JatekosInfo[playerid][ConvoyMunkak] || regiSzereloStat[playerid] < JatekosInfo[playerid][SzereloMunkak] || regiRendorStat[playerid] < JatekosInfo[playerid][RendorMunkak])
	{
	    SetPlayerScore(playerid, JatekosInfo[playerid][ConvoyMunkak] + JatekosInfo[playerid][SzereloMunkak] + JatekosInfo[playerid][RendorMunkak]);
        regiConvoyStat[playerid] = JatekosInfo[playerid][ConvoyMunkak];
        regiSzereloStat[playerid] = JatekosInfo[playerid][SzereloMunkak];
        regiRendorStat[playerid] = JatekosInfo[playerid][RendorMunkak];
	}
    if(IsPlayerInRangeOfPoint(playerid, 1.0, 1658.5491, 2199.5457, 10.8203)) //autÃ³s bolt
    {
        if(playerBoltElott[playerid] == 0)
        {
            playerBoltElott[playerid] = 1;
            //SendClientMessage(playerid, WHITE, "A bolt elÅtt vagy!");
        	new Autoker[256], AutokerCim[128];

			format(AutokerCim, sizeof(AutokerCim), "{FFFFFF}AutÃ³ KereskedÃ©s");
			format(Autoker, sizeof(Autoker), "{FFFFFF}JÃ¡rmÅ± vÃ¡sÃ¡rlÃ¡s");
			ShowPlayerDialog(playerid, DialogAutoKer, DIALOG_STYLE_LIST, AutokerCim, Autoker, "KivÃ¡laszt", "MÃ©gsem");
        }
    }
    else
    {
        if(playerBoltElott[playerid] == 1)
        {
            playerBoltElott[playerid] = 0;
        }
    } // autÃ³sbolt vÃ©ge
    //LS felÃ©
    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1732.1414,483.4149,29.5655) || IsPlayerInRangeOfPoint(playerid, 5.0, 1727.3549,514.2130,28.3112) || IsPlayerInRangeOfPoint(playerid, 5.0, 1742.8572,512.3981,28.1290) || IsPlayerInRangeOfPoint(playerid, 5.0, 1719.5048,490.3605,29.4646)){
        utdijfizet[playerid] = true;
    }
    //bÃ¡nya
    if(IsPlayerInRangeOfPoint(playerid, 5.0, 844.8026,706.8974,11.4136) || IsPlayerInRangeOfPoint(playerid, 5.0, 820.9283,696.5314,11.3099) || IsPlayerInRangeOfPoint(playerid, 5.0, 829.5019,684.0302,11.4203) || IsPlayerInRangeOfPoint(playerid, 5.0, 850.9821,692.7065,11.4262)){
    	utdijfizet[playerid] = true;
    }
    //kakasfele
    if(IsPlayerInRangeOfPoint(playerid, 5.0, 850.6140,2634.5168,11.4822) || IsPlayerInRangeOfPoint(playerid, 5.0, 827.3093,2639.5859,12.4559) || IsPlayerInRangeOfPoint(playerid, 5.0, 825.2507,2625.5498,12.3913) || IsPlayerInRangeOfPoint(playerid, 5.0, 846.6591,2620.8904,11.4279)){
    	utdijfizet[playerid] = true;
    }

    if(IsPlayerInRangeOfPoint(playerid, 3.0,1736.3951,497.2198,29.1154) && IsPlayerInAnyVehicle(playerid) == 1) //LS
    {
        new ules = GetPlayerVehicleSeat(playerid);
        if(utdijfizet[playerid] == true && ules == 0){
			MoveObject(Sorompok[4],1734.400024414,491.100006104,-29.299999237,1.0+0.0001,0,0.0000000,339.500000000);
			SetTimer("Kapuzar", 5000, false);
			GameTextForPlayer(playerid, "Utdij levonva: 5.000Ft-ot!", 3000, 3);
			JatekosInfo[playerid][Penz]-= 5000;
			//GetPlayerMoney(GivePlayerMoney(playerid, -5000));
			utdijfizet[playerid] = false;
   		}
    }
    if(IsPlayerInRangeOfPoint(playerid, 3.0,1724.0365,502.8001,29.1888) && IsPlayerInAnyVehicle(playerid) == 1) // LS
    {
		new ules = GetPlayerVehicleSeat(playerid);
		if(utdijfizet[playerid] == true && ules == 0){
	    	MoveObject(Sorompok[5],1726.800048828,507.799987793,-28.700000763,1.0+0.0001,0,0.0000000,339.500000000);
	    	SetTimer("Kapuzar", 5000, false);
	    	GameTextForPlayer(playerid, "Utdij levonva: 5.000Ft!", 3000, 3);
            JatekosInfo[playerid][Penz]-= 5000;
			//GetPlayerMoney(GivePlayerMoney(playerid, -5000));
			utdijfizet[playerid] = false;
   		}
    }

    if(IsPlayerInRangeOfPoint(playerid, 5.0, 831.5197,700.7665,11.2878) && IsPlayerInAnyVehicle(playerid) == 1) //BÃ¡nya
    {
		new ules = GetPlayerVehicleSeat(playerid);
		if(utdijfizet[playerid] == true && ules == 0){
	    	MoveObject(Sorompok[6],827.6,698.1,-11.4,1.0+0.0001,0,0.0000000,292);
	    	SetTimer("Kapuzar", 5000, false);
	    	GameTextForPlayer(playerid, "Utdij levonva: 5.000Ft!", 3000, 3);
	    	JatekosInfo[playerid][Penz]-= 5000;
			//GetPlayerMoney(GivePlayerMoney(playerid, -5000));
			utdijfizet[playerid] = false;
   		}
    }

    if(IsPlayerInRangeOfPoint(playerid, 5.0, 840.6326,688.4719,11.3655) && IsPlayerInAnyVehicle(playerid) == 1) //BÃnya
    {
		new ules = GetPlayerVehicleSeat(playerid);
		if(utdijfizet[playerid] == true && ules == 0){
	    	MoveObject(Sorompok[7],844.2,691.2,-11.4,1.0+0.0001,0,0.0000000,291.995);
	    	SetTimer("Kapuzar", 5000, false);
	    	GameTextForPlayer(playerid, "Utdij levonva: 5.000Ft!", 3000, 3);
	    	JatekosInfo[playerid][Penz]-= 5000;
			//GetPlayerMoney(GivePlayerMoney(playerid, -5000));
			utdijfizet[playerid] = false;
   		}
    }

    if(IsPlayerInRangeOfPoint(playerid, 5.0, 838.4305,2637.4216,11.9853) && IsPlayerInAnyVehicle(playerid) == 1)//KAKAS
    {
		new ules = GetPlayerVehicleSeat(playerid);
		if(utdijfizet[playerid] == true && ules == 0){
	    	MoveObject(Sorompok[8],834,2638.3,-12.1,1.0+0.0001,0,0.0000000,254);
	    	SetTimer("Kapuzar", 5000, false);
	    	GameTextForPlayer(playerid, "Utdij levonva: 5.000Ft!", 3000, 3);
	    	JatekosInfo[playerid][Penz]-= 5000;
			//GetPlayerMoney(GivePlayerMoney(playerid, -5000));
			utdijfizet[playerid] = false;
   		}
    }

    if(IsPlayerInRangeOfPoint(playerid, 5.0, 837.1423,2622.7905,11.8424) && IsPlayerInAnyVehicle(playerid) == 1)//KAKAS
    {
		new ules = GetPlayerVehicleSeat(playerid);
		if(utdijfizet[playerid] == true && ules == 0){
	    	MoveObject(Sorompok[9],842.5,2622.1,-11.6,1.0+0.0001,0,0.0000000,253.998);
	    	SetTimer("Kapuzar", 5000, false);
	    	GameTextForPlayer(playerid, "Utdij levonva: 5.000Ft!", 3000, 3);
	    	JatekosInfo[playerid][Penz]-= 5000;
			//GetPlayerMoney(GivePlayerMoney(playerid, -5000));
			utdijfizet[playerid] = false;
   		}
    }

    if(IsPlayerInRangeOfPoint(playerid,8.0,2257.0000000,2031.3000000,12.6000000))
    {
        MoveObject(Sorompok[10],2257.0000000,2031.3000000,-12.6000000,2.0+0.0001,0,0,0);
        SetTimer("Kapuzar", 3000, false);
	}

	//speedcam
	new Float:speed = GetPlayerSpeed(playerid);
	new roundspeed = floatround(speed);
	for(new i = 0; i < 100; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, KamInfo[i][c_x],KamInfo[i][c_y],KamInfo[i][c_z]))
		{
		    if(IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleSeat(playerid) == 0)
		    {
		        if(roundspeed > KamInfo[i][sebesseg] && GetPVarInt(playerid, "Frakcio") != RENDOR)
		        {
		            new tullep = roundspeed - KamInfo[i][sebesseg];
		            //new Float:meres = floatdiv(KamInfo[i][sebesseg], roundspeed);
		            //printf("50/ss: %d, meres: %f", 50/ss, meres);
					if(tullep < 11)
					{
					    if(buntiszabad[playerid])
				        {
					    	SendClientMessage(playerid, ORANGE, "Ne hajts gyorsabban mint a megengedet!");
					    	buntiszabad[playerid] = false;
					       	SetTimerEx("buntetesfelold", 3000, false, "i", playerid);
				    	}
					}
					else
					{
						if(tullep > 30)
			            {
				            if(buntiszabad[playerid])
				            {
					            new buntstr[128];
					            JatekosInfo[playerid][buntetes] += 5000;
					            format(buntstr, sizeof(buntstr), "Gyorsan hajtottÃ¡l! BÃ¼ntetÃ©sed: 5000 Ft. Ãsszes bÃ¼ntetÃ©sed: %d Ft.", JatekosInfo[playerid][buntetes]);
					            SendClientMessage(playerid, 0xFF9900AA, buntstr);
					            buntiszabad[playerid] = false;
					            mysql_format(kapcs, query, sizeof(query), "UPDATE jatekosok SET buntetes = %i WHERE id = %i", JatekosInfo[playerid][buntetes], JatekosInfo[playerid][db_id]);
								mysql_tquery(kapcs, query);
								SetPlayerColor(playerid, ORANGE);
								PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
								new rStr[128];
								for(new j = 0; j < MAX_PLAYERS; j++)
								{
								    if(GetPVarInt(j, "Frakcio") == RENDOR)
								    {
								        format(rStr, sizeof(rStr), "%s -t lekapta a trafipax!", JatekosInfo[playerid][Nev]);
								        SendClientMessage(j, ORANGE, rStr);
								    }
								}
					            SetTimerEx("buntetesfelold", 3000, false, "i", playerid);
				            }
				   		}
				   		else
				   		{
				   		    if(buntiszabad[playerid])
				            {
					            new buntstr[128];
					            JatekosInfo[playerid][buntetes] += 2500;
					            format(buntstr, sizeof(buntstr), "Gyorsan hajtottÃ¡l! BÃ¼ntetÃ©sed: 2500 Ft. Ãsszes bÃ¼ntetÃ©sed: %d Ft.", JatekosInfo[playerid][buntetes]);
					            SendClientMessage(playerid, 0xFF9900AA, buntstr);
					            buntiszabad[playerid] = false;
					            mysql_format(kapcs, query, sizeof(query), "UPDATE jatekosok SET buntetes = %i WHERE id = %i", JatekosInfo[playerid][buntetes], JatekosInfo[playerid][db_id]);
								mysql_tquery(kapcs, query);
								SetPlayerColor(playerid, ORANGE);
								PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
								new rStr[128];
								for(new j = 0; j < MAX_PLAYERS; j++)
								{
								    if(GetPVarInt(j, "Frakcio") == RENDOR)
								    {
								        format(rStr, sizeof(rStr), "%s -t lekapta a trafipax!", JatekosInfo[playerid][Nev]);
								        SendClientMessage(j, ORANGE, rStr);
								    }
								}
					            SetTimerEx("buntetesfelold", 3000, false, "i", playerid);
				            }
				   		}
				   	}
		        }
		    }
		}
	}
	//speedcam vÃ©ge

	if(GetPVarInt(playerid, "mcheckp") == 1 && FuvarKiszalltTimerMehet[playerid][0] == 1)
 	{
		if(IsPlayerInAnyVehicle(playerid) == 0)
		{
		    FuvarKozbenKiszallt(playerid);
		    FuvarKiszalltTimerMehet[playerid][0] = 0;
		}
 	}

 	if(GetPVarInt(playerid, "mcheckp") == 2 && FuvarKiszalltTimerMehet[playerid][0] == 1)
 	{
 	    if(IsPlayerInAnyVehicle(playerid) == 0)
		{
			FuvarKozbenKiszallt(playerid);
			FuvarKiszalltTimerMehet[playerid][0] = 0;
		}
 	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if(GetPVarInt(playerid, "munkacheckpoint") == KAMIONOS)
	{
		if(IsPlayerInAnyVehicle(playerid))
	    {
		    new rand = random(30000);
			new osszeg = 100000+rand;
			new msg[128];
			//GetPlayerMoney(GivePlayerMoney(playerid, 3000+rand));
			JatekosInfo[playerid][Penz] += osszeg;
			format(msg, sizeof(msg), "LeszÃ¡llÃ­tottad az Ã¡rut. FizetÃ©sed: %d", osszeg);
			SendClientMessage(playerid, GREEN, msg);
			/*format(msg1, sizeof(msg1), "A fuvarert kaptal %d Ft-ot", osszeg);
			GameTextForPlayer(playerid, msg1, 3000, 6);*/
			SetPVarInt(playerid, "feltoltve", 0);
	    	DisablePlayerCheckpoint(playerid);
	    	JatekosInfo[playerid][ConvoyMunkak]++;
	    	DestroyObject(rakomanyModelid[playerid][0]);
	    	DestroyObject(rakomanyModelid[playerid][1]);
	    	DestroyObject(rakomanyModelid[playerid][2]);
	    	DestroyObject(rakomanyModelid[playerid][3]);
			return 1;
		}
		else SendClientMessage(playerid, RED,"Nem Ã¼lsz teherautÃ³ban!");
 	}
 	if(GetPVarInt(playerid, "munkacheckpoint") == UDITOSMEGRAKOD)
 	{
 	    DisablePlayerCheckpoint(playerid);
 	}
 	if(GetPVarInt(playerid, "munkacheckpoint") == UDITOS)
 	{
    	DisablePlayerCheckpoint(playerid);
    	SendClientMessage(playerid, GREEN, "OdaÃ©rtÃ©l az autÃ³matÃ¡hoz, menj oda Ã©s tÃ¶ltsd fel! (/automata feltolt)");
		return 1;
 	}

 	if(GetPVarInt(playerid, "mcheckp") == 1)
 	{
 	    if(IsPlayerInAnyVehicle(playerid) != 0)
 	    {
 	        new azon = GetPVarInt(playerid, "fuvarlistitem");
		    new kocsikell;
		    for(new i = 0; i < fuvardb; i++)
		    {
		        if(FuvarInfo[i][id] == azon)
		        {
					kocsikell = FuvarInfo[i][models];
		        }
		    }
		    new kocsija = GetPlayerVehicleID(playerid);
		    new trailerid;
		    if(IsTrailerAttachedToVehicle(kocsija))
			{
			    trailerid = GetVehicleTrailer(kocsija);
   			}
		    if(GetVehicleModel(kocsija) == kocsikell || GetVehicleModel(trailerid) == kocsikell)
		    {
		 	    DisablePlayerCheckpoint(playerid);
		 	    PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		 	    SendClientMessage(playerid, GREEN, "FeltÃ¶ltÃ©s!");
		 	    SetPVarInt(playerid, "mcheckp", 0);
		 	    TogglePlayerControllable(playerid,0);
		 	    SetTimerEx("munkafeltolt", 5000, false, "i", playerid);
		 	}
 	    }
 	}

 	if(GetPVarInt(playerid, "mcheckp") == 2)
 	{
 	    if(IsPlayerInAnyVehicle(playerid) != 0)
 	    {
 	        new azon = GetPVarInt(playerid, "fuvarlistitem");
		    new kocsikell;
		    for(new i = 0; i < fuvardb; i++)
		    {
		        if(FuvarInfo[i][id] == azon)
		        {
					kocsikell = FuvarInfo[i][models];
		        }
		    }
			new kocsija = GetPlayerVehicleID(playerid);
			new trailerid;
		    if(IsTrailerAttachedToVehicle(kocsija))
			{
			    trailerid = GetVehicleTrailer(kocsija);
   			}
		    if(GetVehicleModel(kocsija) == kocsikell || GetVehicleModel(trailerid) == kocsikell)
		    {
		 	    DisablePlayerCheckpoint(playerid);
		 	    PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		 	    SendClientMessage(playerid, GREEN, "LepakolÃ¡s!");
		 	    SetPVarInt(playerid, "mcheckp", 0);
		 	    TogglePlayerControllable(playerid,0);
		 	    SetTimerEx("munkalepakol", 5000, false, "i", playerid);
		 	}
 	    }
 	}

	return 1;
}

forward JatekosBeregelt(playerid);
public JatekosBeregelt(playerid)
{
        SendClientMessage(playerid, 0xFFFFFFFF, "Sikeresen regisztrÃ¡ltÃ¡l!");
        SetSpawnInfo(playerid, 0, 7, 1679.2263, 1447.4387, 10.7745, 270.0, 0, 0, 0, 0, 0, 0);
        TogglePlayerSpectating(playerid, false);
        SpawnPlayer(playerid);
        SendClientMessage(playerid, 0xFFFFFFFF, "JÃ³ jÃ¡tÃ©kot kÃ­vÃ¡nok!");
        SendClientMessage(playerid, GREEN, "HasznÃ¡ld a /foglalkozas parancsot!");
        buntiszabad[playerid] = true;
        FuvarKiszalltTimerMehet[playerid][0] = 1;
        playerBoltElott[playerid] = 0;
        return 1;
}

forward JatekosBelep(playerid);
public JatekosBelep(playerid)
{
        new sorok_szama = cache_get_row_count();
        if(sorok_szama == 0) return ShowPlayerDialog(playerid, d_belep, DIALOG_STYLE_PASSWORD, "BejelentkezÃ©s", "{FFFFFF}Ãdv a szerveren!\nJatekosInfo regisztrÃ¡ltÃ¡l!KÃ©rlek add meg a jelszavad, amivel regisztrÃ¡ltÃ¡lt!\n\n{FF0000}HibÃ¡s jelszÃ³!", "BelÃ©p", "KilÃ©p");
        //Az elobb, ha hibÃ¡s volt a jelszÃ³ visszatÃ©rtÃ¼nk volna, szÃ³val innenztol ami lefut kÃ³d, az mÃ¡r jÃ³ jelszÃ³val fut le:
        SendClientMessage(playerid, 0xFFFFFFFF, "Sikeresen bejelentkeztÃ©l!");
        TogglePlayerSpectating(playerid, false);
        SetSpawnInfo(playerid, 0, cache_get_field_content_int(0, "skin"), cache_get_field_content_float(0, "X"), cache_get_field_content_float(0, "Y"), cache_get_field_content_float(0, "Z"), 90.0, 0, 0, 0, 0, 0, 0); //BeÃ¡llÃ­tjuk a spawn pozÃ­ciÃ³t, skint egyebeket.
        SpawnPlayer(playerid);
        JatekosInfo[playerid][Penz] = cache_get_field_content_int(0, "Penz",kapcs);
        //GivePlayerMoney(playerid, JatekosInfo[playerid][Penz]);
		JatekosInfo[playerid][alevel] = cache_get_field_content_int(0, "alevel",kapcs);
		JatekosInfo[playerid][Skin] = cache_get_field_content_int(0, "skin",kapcs);
		JatekosInfo[playerid][db_id] = cache_get_field_content_int(0, "ID",kapcs);
		JatekosInfo[playerid][ConvoyMunkak] = cache_get_field_content_int(0, "cmunka",kapcs);
		JatekosInfo[playerid][SzereloMunkak] = cache_get_field_content_int(0, "szmunka",kapcs);
		JatekosInfo[playerid][RendorMunkak] = cache_get_field_content_int(0, "rmunka",kapcs);
		JatekosInfo[playerid][BankMoney] = cache_get_field_content_int(0, "bankmoney",kapcs);
		JatekosInfo[playerid][buntetes] = cache_get_field_content_int(0, "buntetes",kapcs);
        SendClientMessage(playerid, GREEN, "Ãdv Ãºjra itt!\nHasznÃ¡ld a /foglalkozas parancsot!");
        if(JatekosInfo[playerid][buntetes] != 0)
        {
            new buntStr[128];
            format(buntStr, sizeof(buntStr), "MeglÃ©vÅ bÃ¼ntetÃ©sed: %d Ft", JatekosInfo[playerid][buntetes]);
            SendClientMessage(playerid, ORANGE, buntStr);
            SetPlayerColor(playerid, ORANGE);
        }
        else
        {
            SetPlayerColor(playerid, YELLOW);
        }
        buntiszabad[playerid] = true;
        FuvarKiszalltTimerMehet[playerid][0] = 1;
        playerBoltElott[playerid] = 0;
        SetPlayerScore(playerid, JatekosInfo[playerid][ConvoyMunkak] + JatekosInfo[playerid][SzereloMunkak] + JatekosInfo[playerid][RendorMunkak]);
        regiConvoyStat[playerid] = JatekosInfo[playerid][ConvoyMunkak];
        regiSzereloStat[playerid] = JatekosInfo[playerid][SzereloMunkak];
        regiRendorStat[playerid] = JatekosInfo[playerid][RendorMunkak];
		return 1;
}
forward AutoLoad();
public AutoLoad()
{
	//printf("lekerdezett sorok:%d", cache_get_row_count());
	if(!cache_get_row_count()) return printf("cache_get_row_count returned false. Nincsennek betÃ¶ltendÅ sorok.");
	 	for(new i = 0; i < cache_get_row_count(); i++)
		{
		    new rendszam[8];
			//AutoInfo[i][ID] = AutoCount;
			cache_get_field_content(i, "rszam", rendszam);
			AutoInfo[i][rszam] = rendszam;
			AutoInfo[i][model] = cache_get_field_content_int(i,"model",kapcs);
			AutoInfo[i][Tulaj] = cache_get_field_content_int(i,"tulaj",kapcs);
			AutoInfo[i][X] = cache_get_field_content_float(i,"x",kapcs);
			AutoInfo[i][Y] = cache_get_field_content_float(i,"y",kapcs);
			AutoInfo[i][Z] = cache_get_field_content_float(i,"z",kapcs);
			AutoInfo[i][Angle] = cache_get_field_content_float(i,"angle",kapcs);
			AutoInfo[i][color1] = cache_get_field_content_int(i,"color1",kapcs);
			AutoInfo[i][color2] = cache_get_field_content_int(i,"color2",kapcs);
            AutoInfo[i][ID] = AddStaticVehicleEx(AutoInfo[i][model],AutoInfo[i][X],AutoInfo[i][Y],AutoInfo[i][Z],AutoInfo[i][Angle],AutoInfo[i][color1],AutoInfo[i][color2],-1);
			SetVehicleNumberPlate(AutoInfo[i][ID], AutoInfo[i][rszam]);
			AutoCount++;
			//printf("autok: %d",AutoCount);
		}
    printf("%d autÃ³ betÃ¶ltve!", AutoCount);
		//SetTimer("AutoSave", 1000, true);
	return 1;
}

forward AutoSave();
public AutoSave()
{
	for(new i; i != 50; i ++)
	{
	    mysql_format(kapcs, query, sizeof(query), "UPDATE autok SET model='%i',tulaj='%i',x='%f',y='%f',z='%f',angle='%f' WHERE id = %d",
		AutoInfo[i][model],AutoInfo[i][X],AutoInfo[i][Y],AutoInfo[i][Z],AutoInfo[i][Angle],-1,-1,-1);
	    mysql_tquery(kapcs, query);
	}
	//print("Minden auto mentve!");
	return 1;
}

//Objektum betÃ¶ltÃ©se SQL-bÅl
forward ObjectLoad();
public ObjectLoad()
{
	if(!cache_get_row_count()) return printf("cache_get_row_count returned false. Nincsennek betÃ¶ltendÅ sorok.");
	 	for(new i, j = cache_get_row_count(); i < j ; i++)
		{
			Objektumok[i][id] = ObjektCount;
			Objektumok[i][modelID] = cache_get_field_content_int(i,"modelid",kapcs);
		    Objektumok[i][xCor] = cache_get_field_content_float(i,"x",kapcs);
		    Objektumok[i][yCor] = cache_get_field_content_float(i,"y",kapcs);
		    Objektumok[i][zCor] = cache_get_field_content_float(i,"z",kapcs);
		    Objektumok[i][rxCor] = cache_get_field_content_float(i,"rx",kapcs);
		    Objektumok[i][ryCor] = cache_get_field_content_float(i,"ry",kapcs);
		    Objektumok[i][rzCor] = cache_get_field_content_float(i,"rz",kapcs);

			if(Objektumok[i][modelID] == 968 || Objektumok[i][modelID] == 3578 || Objektumok[i][modelID] == 980)
			{
			    Sorompok[SorompoID] = CreateObject(Objektumok[i][modelID], Objektumok[i][xCor], Objektumok[i][yCor], Objektumok[i][zCor], Objektumok[i][rxCor], Objektumok[i][ryCor], Objektumok[i][rzCor]);
			    SorompoID ++;
			}
			else
			{
				CreateObject(Objektumok[i][modelID], Objektumok[i][xCor], Objektumok[i][yCor], Objektumok[i][zCor], Objektumok[i][rxCor], Objektumok[i][ryCor], Objektumok[i][rzCor]);
		        ObjektCount ++;
			}
		}
	printf("%d objektum betÃ¶ltve!", ObjektCount);
	printf("%d sorompo betÃ¶ltve!",SorompoID);
	SetTimer("SaveObject", 900000, true);

	return 1;
}

/*forward SaveObject();
public SaveObject()
{
	for(new i; i != MAX_OBJECTS; i ++)
	{
	    mysql_format(kapcs, query, sizeof(query), "UPDATE objects SET modelid='%i',x='%f',y='%f',z='%f',rx='%f',ry='%f',rz='%f' WHERE id = %d",
		Objektumok[i][modelID], Objektumok[i][xCor], Objektumok[i][yCor], Objektumok[i][zCor], Objektumok[i][rxCor], Objektumok[i][ryCor], Objektumok[i][rzCor]);

	    mysql_tquery(kapcs, query);
	}
	print("Minden object mentve!");
	return 1;
}//Objektum betÃ¶ltÃ©s vÃ©ge SQL-bÅl.*/

forward HazLoad();
public HazLoad()
{
if(!cache_get_row_count()) return printf("cache_get_row_count returned false. Nincsennek betÃ¶ltendÅ sorok.");
 	for(new i, j = cache_get_row_count(); i < j ; i++)
	{
		//HazInfo[i][h_id] = HazCount;
	    HazInfo[i][h_x] = cache_get_field_content_float(i,"h_x",kapcs);
	    HazInfo[i][h_y] = cache_get_field_content_float(i,"h_y",kapcs);
	    HazInfo[i][h_z] = cache_get_field_content_float(i,"h_z",kapcs);
	    HazInfo[i][ih_x] = cache_get_field_content_float(i,"ih_x",kapcs);
	    HazInfo[i][ih_y] = cache_get_field_content_float(i,"ih_y",kapcs);
	    HazInfo[i][ih_z] = cache_get_field_content_float(i,"ih_z",kapcs);
	    HazInfo[i][interior] = cache_get_field_content_int(i,"interior",kapcs);
	    new jnev[MAX_PLAYER_NAME];
	    cache_get_field_content(i,"nev",jnev,kapcs);
	    HazInfo[i][tulaj] = jnev;
	    HazInfo[i][h_ar] = cache_get_field_content_int(i,"ar",kapcs);
	    HazInfo[i][h_id] = cache_get_field_content_int(i,"id",kapcs);
	    HazInfo[i][pickupid] = cache_get_field_content_int(i,"pickupID",kapcs);
	    HazInfo[i][tulaj_id] = cache_get_field_content_int(i,"tulaj",kapcs);
	    vanHaza[HazInfo[i][tulaj_id]][0] = 1;
	    hazupdate(i);
	}
	return 1;
}

hazmentes(i,playerid)
{
	mysql_format(kapcs, query, sizeof(query), "UPDATE hazak SET tulaj='%i',pickupID='%i' WHERE id = %i",JatekosInfo[playerid][db_id],HazInfo[i][pickupid],HazInfo[i][h_id]);
	printf("%s",query);
	mysql_tquery(kapcs, query);
}

hazelad(i)
{
	mysql_format(kapcs, query, sizeof(query), "UPDATE hazak SET tulaj='0',pickupID='1273' WHERE id = %i",HazInfo[i][h_id]);
	printf("%s",query);
	mysql_tquery(kapcs, query);
}

hazupdate(i)
{
	new str[128];
    if(HazInfo[i][tulaj_id] == 0)
    {
		HazInfo[i][h_pickup] = CreatePickup(HazInfo[i][pickupid],1,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z],-1);
		format(str,sizeof(str),"[ELADÃ]\nHÃ¡zszÃ¡m: %i\nÃr: %i Ft\n/vasarol",HazInfo[i][h_id],HazInfo[i][h_ar]);
		HazInfo[i][h_text] = Create3DTextLabel(str,YELLOW,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z],10,0,1);
		HazCount++;
	}
	else
	{
		HazInfo[i][h_pickup] = CreatePickup(HazInfo[i][pickupid],1,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z],-1);
		format(str,sizeof(str),"Tulajdonos: %s\nHÃ¡zszÃ¡m: %i\n/elad",HazInfo[i][tulaj],HazInfo[i][h_id]);
		HazInfo[i][h_text] = Create3DTextLabel(str,YELLOW,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z],10,0,1);
		HazCount++;
	}
}

forward KamLoad();
public KamLoad()
{
	if(!cache_get_row_count()) return printf("cache_get_row_count returned false. Nincsennek betÃ¶ltendÅ sorok.");
	 	for(new i, j = cache_get_row_count(); i < j ; i++)
		{
			KamInfo[i][c_x] = cache_get_field_content_float(i,"cx",kapcs);
			KamInfo[i][c_y] = cache_get_field_content_float(i,"cy",kapcs);
			KamInfo[i][c_z] = cache_get_field_content_float(i,"cz",kapcs);
			KamInfo[i][c_angle] = cache_get_field_content_float(i,"ca",kapcs);
			KamInfo[i][sebesseg] = cache_get_field_content_int(i,"speed",kapcs);
			kamdb++;
		}
	printf("%d trafipax betÃ¶ltve!", kamdb);
return 1;
}

forward FuvarLoad();
public FuvarLoad()
{
	if(!cache_get_row_count()) return printf("cache_get_row_count returned false. Nincsennek betÃ¶ltendÅ sorok.");
	 	for(new i=0; i < cache_get_row_count(); i++)
		{
			FuvarInfo[i][id] = cache_get_field_content_int(i,"id",kapcs);
			FuvarInfo[i][models] = cache_get_field_content_int(i,"kocsi_model",kapcs);
			FuvarInfo[i][h_x] = cache_get_field_content_float(i,"h_x",kapcs);
			FuvarInfo[i][h_y] = cache_get_field_content_float(i,"h_y",kapcs);
			FuvarInfo[i][h_z] = cache_get_field_content_float(i,"h_z",kapcs);
			FuvarInfo[i][c_x] = cache_get_field_content_float(i,"c_x",kapcs);
			FuvarInfo[i][c_y] = cache_get_field_content_float(i,"c_y",kapcs);
			FuvarInfo[i][c_z] = cache_get_field_content_float(i,"c_z",kapcs);
			FuvarInfo[i][tav] = cache_get_field_content_float(i,"tavolsag",kapcs);
			new H_t[130];
			new C_t[130];
			cache_get_field_content(i, "h_t", H_t);
			FuvarInfo[i][h_t] = H_t;
			cache_get_field_content(i, "c_t", C_t);
			FuvarInfo[i][c_t] = C_t;
			fuvardb++;
		}
	printf("%d fuvar betÃ¶ltve!", fuvardb);
return 1;
}

forward Kapuzar();
public Kapuzar()
{
	MoveObject(Sorompok[2],2279.2000000,611.9000200,11.1000001,1.0+0.0001,0.0000000,90.0000000,0.0000000);
	//MoveObject(Sorompok[4],1734.400024414,491.100006104,29.299999237,1.0+0.0001,0,0.0000000,339.500000000);
	MoveObject(Sorompok[4],1738.8000000,503.0000000,28.6000000,1.0+0.0001,0,0.0000000,339.500000000);// LS felÃ©
	//MoveObject(Sorompok[5],1726.800048828,507.799987793,28.700000763,1.0+0.0001,0,0.0000000,339.500000000);
	MoveObject(Sorompok[5],1721.9000000,496.0000000,29.2000000,1.0+0.0001,0,0.0000000,339.500000000);// LS felÃ©
	MoveObject(Sorompok[6],827.6,698.1,11.4,1.0+0.0001,0,0.0000000,292); // bÃ¡nya felÃ©
	MoveObject(Sorompok[7],844.2,691.2,11.4,1.0+0.0001,0,0.0000000,291.995);// bÃ¡nya felÃ©
	MoveObject(Sorompok[8],834,2638.3,12.1,1.0+0.0001,0,0.0000000,254); // kakas felÃ©
	MoveObject(Sorompok[9],842.5,2622.1,11.6,1.0+0.0001,0,0.0000000,253.998); // kakas felÃ©
	MoveObject(Sorompok[10],2257.0000000,2031.3000000,12.6000000,2.0+0.0001,0,0,0);
}

/*forward adminok(playerid);
public adminok(playerid)
{
new text[128];
if(!cache_get_row_count()) return printf("cache_get_row_count returned false. Nincsennek betÃ¶ltendÅ sorok.");
 	for(new i, j = cache_get_row_count(); i < j ; i++)
	{
	    new Valami[128];
		cache_get_field_content(i,"Nev",Valami);
		JatekosInfo[i][valami] = Valami;
	    format(text,sizeof(text),"%s admin",JatekosInfo[i][valami]);
	    SendClientMessage(playerid,GREEN,text);
	}
return 1;
}*/

//PARANCSOK=========================================================================================
//===============================EGYÃB GAMEMOD PARANCSOK============================================
/*CMD:szint(playerid,params[])
{
    mysql_tquery(kapcs,"SELECT Nev FROM jatekosok WHERE alevel > 1","adminok");
    return 1;
}*/
CMD:kocsi(playerid,params[])
{
	new mID;
	if(sscanf(params,"i",mID)) return SendClientMessage(playerid,YELLOW,"INFO: /kocsi [ID]");
	if(mID<400 || mID>611) return SendClientMessage(playerid,RED,"400-611-ig vannak csak kocsik!");

	new Float:pX,Float:pY,Float:pZ,Float:pR;
	GetPlayerPos(playerid,pX, pY, pZ);
	GetPlayerFacingAngle(playerid, pR);
	SetVehicleNumberPlate(AddStaticVehicleEx(mID,pX+4,pY,pZ,pR,12,12,-1,1), "ADMIN");
	AutoCount++;
	return 1;
}

CMD:kocsiszin(playerid,params[])
{
	new mID;
	new col1, col2;
	if(sscanf(params,"iii",mID,col1,col2)) return SendClientMessage(playerid,YELLOW,"INFO: /kocsi [ID] [szin1] [szin2]");
	if(mID<400 || mID>611) return SendClientMessage(playerid,RED,"400-611-ig vannak csak kocsik!");
	if(col1<0 || col1>168 && col2<=0 || col2>168) return SendClientMessage(playerid,RED,"0-tÃ³l 168-ig van szÃ­n!");

	new Float:pX,Float:pY,Float:pZ,Float:pR;
	GetPlayerPos(playerid,pX, pY, pZ);
	GetPlayerFacingAngle(playerid, pR);
	SetVehicleNumberPlate(AddStaticVehicleEx(mID,pX-4,pY-8,pZ,pR,col1,col2,-1,1), "ADMIN");
	AutoCount++;
	return 1;
}

CMD:skocsi(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid) != 0)
	{
		new rendszam[8];
		new tulajdonos, szin1, szin2;
		//new string[128];
		if(sscanf(params, "sddd",rendszam, tulajdonos, szin1, szin2)) return SendClientMessage(playerid, LIGHTBLUE, "HasznÃ¡lata: /skocsi [rendszam] [tulaj] [szin1] [szin2]");
		{
		    new currentveh = GetPlayerVehicleID(playerid);
		    new vehModelID = GetVehicleModel(currentveh);
			new Float:vehx, Float:vehy, Float:vehz, Float:z_rot;
			GetVehiclePos(currentveh, vehx, vehy, vehz);
			GetVehicleZAngle(currentveh, z_rot);
			//format(string, sizeof(string), "A kocsi adatai: rszam: %s, model: %d, tulaj: %d x: %f, y: %f, z: %f, rot: %f, szin1: %d, szin2: %d", rendszam, vehModelID, tulajdonos, vehx, vehy, vehz, z_rot, szin1, szin2);
	        format(query, sizeof(query), "INSERT INTO `autok` (`id`, `rszam`, `model`, `tulaj`, `x`, `y`, `z`, `angle`,`color1`,`color2`) VALUES (NULL, '%s', '%d', '%d', '%f', '%f', '%f', '%f', '%d', '%d')", rendszam, vehModelID, tulajdonos, vehx, vehy, vehz, z_rot, szin1, szin2);
			mysql_tquery(kapcs, query);
			SendClientMessage(playerid, GREEN, "| A kocsi mentve az adatbÃ¡zisba! |");
		}
	}
	return 1;
}

CMD:shaz(playerid, params[])
{
	new osszeg;
	if(sscanf(params, "i",osszeg)) return SendClientMessage(playerid, LIGHTBLUE, "HasznÃ¡lata: /shaz [A hÃ¡z Ã¡ra]");
	{
	    new Float:x, Float:y, Float:z;
    	GetPlayerPos(playerid, x, y, z);
        format(query, sizeof(query), "INSERT INTO `hazak` (`id`, `tulaj`, `h_x`, `h_y`, `h_z`, `interior`, `ar`) VALUES (NULL, '', '%f', '%f', '%f', '0', '%d')", x, y, z, osszeg);
		mysql_tquery(kapcs, query);
		SendClientMessage(playerid, -1, "Elmentve!");
	}
	return 1;
}

CMD:sfuvar(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid) != 0)
	{
		new melyikresz;
		if(sscanf(params, "i",melyikresz)) return SendClientMessage(playerid, LIGHTBLUE, "HasznÃ¡lata: /sfuvar [1 - honnan, 2 - hova(szigorÃºan betartani! 2-vel adatbÃ¡zisba Ã­r]");
		{
		    new Float:x, Float:y, Float:z;
		    new currveh = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(currveh) != 515 && GetVehicleModel(currveh) != 514 && GetVehicleModel(currveh) != 403)
			{
			    if(melyikresz == 1)
			    {
		    		GetVehiclePos(currveh, x, y, z);
		    		FuvarInfo[FUVMENT][models] = GetVehicleModel(currveh);
		    		FuvarInfo[FUVMENT][h_x] = x;
		    		FuvarInfo[FUVMENT][h_y] = y;
		    		FuvarInfo[FUVMENT][h_z] = z;
		    		FuvarInfo[FUVMENT][h_t] = GetPlayerArea(playerid);
		    		SendClientMessage(playerid, GREEN, "A kezdÅpontok elmentve. Menj a cÃ©lÃ¡llomÃ¡shoz Ã©s hasznÃ¡ld az | /sfuvar 2 | parancsot!");
		    		return 1;
			    }
				if(melyikresz == 2)
				{
				    new currentveh = GetPlayerVehicleID(playerid);
		    		GetVehiclePos(currentveh, x, y, z);
		    		FuvarInfo[FUVMENT][c_x] = x;
		    		FuvarInfo[FUVMENT][c_y] = y;
		    		FuvarInfo[FUVMENT][c_z] = z;
		    		FuvarInfo[FUVMENT][c_t] = GetPlayerArea(playerid);
		    		FuvarInfo[FUVMENT][tav] = floatsqroot((FuvarInfo[FUVMENT][h_x] - FuvarInfo[FUVMENT][c_x]) * (FuvarInfo[FUVMENT][h_x] - FuvarInfo[FUVMENT][c_x]) + (FuvarInfo[FUVMENT][h_y] - FuvarInfo[FUVMENT][c_y]) * (FuvarInfo[FUVMENT][h_y] - FuvarInfo[FUVMENT][c_y]) + (FuvarInfo[FUVMENT][h_z] - FuvarInfo[FUVMENT][c_z]) * (FuvarInfo[FUVMENT][h_z] - FuvarInfo[FUVMENT][c_z]));
		    		format(query, sizeof(query), "INSERT INTO `fuvarok` (`id`, `kocsi_model`, `h_x`, `h_y`, `h_z`, `c_x`, `c_y`, `c_z`, `tavolsag`, `h_t`, `c_t`) VALUES (NULL, '%d', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%s', '%s')", FuvarInfo[FUVMENT][models], FuvarInfo[FUVMENT][h_x], FuvarInfo[FUVMENT][h_y], FuvarInfo[FUVMENT][h_z], FuvarInfo[FUVMENT][c_x], FuvarInfo[FUVMENT][c_y], FuvarInfo[FUVMENT][c_z], FuvarInfo[FUVMENT][tav],FuvarInfo[FUVMENT][h_t],FuvarInfo[FUVMENT][c_t]);
					//printf("%s", query);
					mysql_tquery(kapcs, query);
					SendClientMessage(playerid, GREEN, "A fuvar sikeresen elmentve az adatbÃ¡zisba!");
					return 1;
				}
			}
			else
			{
				if(IsTrailerAttachedToVehicle(currveh))
				{
				    new trailerid = GetVehicleTrailer(currveh);
				    if(melyikresz == 1)
				    {
			    		GetVehiclePos(trailerid, x, y, z);
			    		FuvarInfo[FUVMENT][models] = GetVehicleModel(trailerid);
			    		FuvarInfo[FUVMENT][h_x] = x;
			    		FuvarInfo[FUVMENT][h_y] = y;
			    		FuvarInfo[FUVMENT][h_z] = z;
			    		SendClientMessage(playerid, GREEN, "A kezdÅpontok elmentve. Menj a cÃ©lÃ¡llomÃ¡shoz Ã©s hasznÃ¡ld az | /sfuvar 2 | parancsot!");
			    		return 1;
				    }
					if(melyikresz == 2)
					{
			    		GetVehiclePos(trailerid, x, y, z);
			    		FuvarInfo[FUVMENT][c_x] = x;
			    		FuvarInfo[FUVMENT][c_y] = y;
			    		FuvarInfo[FUVMENT][c_z] = z;
			    		FuvarInfo[FUVMENT][tav] = floatsqroot((FuvarInfo[FUVMENT][h_x] - FuvarInfo[FUVMENT][c_x]) * (FuvarInfo[FUVMENT][h_x] - FuvarInfo[FUVMENT][c_x]) + (FuvarInfo[FUVMENT][h_y] - FuvarInfo[FUVMENT][c_y]) * (FuvarInfo[FUVMENT][h_y] - FuvarInfo[FUVMENT][c_y]) + (FuvarInfo[FUVMENT][h_z] - FuvarInfo[FUVMENT][c_z]) * (FuvarInfo[FUVMENT][h_z] - FuvarInfo[FUVMENT][c_z]));
			    		format(query, sizeof(query), "INSERT INTO `fuvarok` (`id`, `kocsi_model`, `h_x`, `h_y`, `h_z`, `c_x`, `c_y`, `c_z`, `tavolsag`) VALUES (NULL, '%d', '%f', '%f', '%f', '%f', '%f', '%f', '%f')", FuvarInfo[FUVMENT][models], FuvarInfo[FUVMENT][h_x], FuvarInfo[FUVMENT][h_y], FuvarInfo[FUVMENT][h_z], FuvarInfo[FUVMENT][c_x], FuvarInfo[FUVMENT][c_y], FuvarInfo[FUVMENT][c_z], FuvarInfo[FUVMENT][tav]);
						//printf("%s", query);
						mysql_tquery(kapcs, query);
						SendClientMessage(playerid, GREEN, "A fuvar sikeresen elmentve az adatbÃ¡zisba!");
						return 1;
					}
				}
				else return SendClientMessage(playerid, RED, "Nincs trailer a kamionhoz csatolva!");
			}
		}
	}
	else return SendClientMessage(playerid, RED, "Kocsiban kell Ã¼lnÃ¶d!");
	return 1;
}

CMD:kament(playerid, params[])
{
	new seb;
	if(sscanf(params, "i",seb)) return SendClientMessage(playerid, YELLOW, "HasznÃ¡lata: /kament [max sebessÃ©g]");
	{
	    new Float:x, Float:y, Float:z, Float:angle;
    	GetPlayerPos(playerid, x, y, z);
    	GetPlayerFacingAngle(playerid, angle);
		z = z - 1.0;
        format(query, sizeof(query), "INSERT INTO `scam` (`id`,`cx`, `cy`, `cz`, `ca`, `speed`) VALUES (NULL, '%f', '%f', '%f', '%f', '%d')", x, y, z, angle, seb);
		mysql_tquery(kapcs, query);
		SendClientMessage(playerid, -1, "Kamera lerakva!");
	}
	return 1;
}

//=======================================================================================

CMD:nyit(playerid,params[])
{
	if(IsPlayerInRangeOfPoint(playerid,6.0,2282.0134,610.1063,10.8203))
	{
		MoveObject(Sorompok[2],2279.2000000,611.9000200,11.1000001,1.0+0.0001,0,12.0000000,0);
		SetTimer("Kapuzar", 6000, false);
		SendClientMessage(playerid,YELLOW,"Kinyitva. (autÃ³mata kapu)");
	}else
	SendClientMessage(playerid,RED,"Nem Ã¡llsz a kapunÃ¡l!");
	return 1;
}

CMD:stat(playerid,params[])
{
	new StatsMsg[1000],TitleMsg[128],i;
	format(StatsMsg, 1000, "Levezetett kilÃ³mÃ©ter:\t {0FA0D1}%.3f Km{FFFFFF}\n",AutoInfo[i][d]);
	format(StatsMsg, 1000, "%sPÃ©nzed:\t\t {0FA0D1}%i Ft{FFFFFF}\n", StatsMsg, JatekosInfo[playerid][Penz]);
	format(StatsMsg, 1000, "%sLeszÃ¡llÃ­tott fuvarok:  \t {0FA0D1}%i{FFFFFF}\n", StatsMsg,JatekosInfo[playerid][ConvoyMunkak]);
	format(StatsMsg, 1000, "%sMegjavÃ­tott jÃ¡rmÅ±vek:  \t {0FA0D1}%i{FFFFFF}\n", StatsMsg,JatekosInfo[playerid][SzereloMunkak]);
	format(StatsMsg, 1000, "%sElkapott jÃ¡tÃ©kosok:\t {0FA0D1}%i{FFFFFF}\n", StatsMsg,JatekosInfo[playerid][RendorMunkak]);
	format(StatsMsg, 1000, "%sÃsszes bÃ¼netÃ©s:\t {0FA0D1}%i{FFFFFF}\n", StatsMsg,JatekosInfo[playerid][buntetes]);
	format(StatsMsg, 1000, "%sSzerveren tÃ¶ltÃ¶tt idÅ:\t {0FA0D1}Nap: %i Ãra: %i:%i:%i{FFFFFF}\n", StatsMsg,PlayerTime[playerid][Nap],PlayerTime[playerid][Ora],PlayerTime[playerid][Perc],PlayerTime[playerid][Mp]);
	format(TitleMsg, 128, "{0FA0D1}Statisztika {FFFFFF}%s:", JatekosInfo[playerid][Nev]);
	ShowPlayerDialog(playerid, stat, DIALOG_STYLE_LIST, TitleMsg, StatsMsg, "Ok", "");
	return 1;
}

CMD:bank(playerid,params[])
{
	new BankOptions[256], BankTitle[128];

	format(BankTitle, sizeof(BankTitle), "{FFFFFF}Bankban lÃ©vÅ pÃ©nzed: {0FA0D1}%i Ft", JatekosInfo[playerid][BankMoney]);
	format(BankOptions, sizeof(BankOptions), "{FFFFFF}PÃ©nzt betesz\n");
	format(BankOptions, sizeof(BankOptions), "%s{FFFFFF}PÃ©nzt kivesz\n", BankOptions);
	//format(BankOptions, sizeof(BankOptions), "%s{00FF00}PÃ©nzt Ã¡tutal\n", BankOptions);

	ShowPlayerDialog(playerid, DialogBank, DIALOG_STYLE_LIST, BankTitle, BankOptions, "VÃ¡laszt", "MÃ©gsem");
	return 1;
}
// EZT IS MEG KELL ÃRNI!--------------------------------------------------------------------------------------------------------------------------------------
/*CMD:kereskedes(playerid,params[])
{
	new Autoker[256], AutokerCim[128];

	format(AutokerCim, sizeof(AutokerCim), "{FFFFFF}AutÃ³ KereskedÃ©s");
	format(Autoker, sizeof(Autoker), "{FFFFFF}JÃ¡rmÅ± vÃ¡sÃ¡rlÃ¡s\n");

	ShowPlayerDialog(playerid, DialogAutoKer, DIALOG_STYLE_LIST, AutokerCim, Autoker, "KivÃ¡laszt", "MÃ©gsem");
	return 1;
}*/

CMD:foglalkozas(playerid,params[])
{
	ShowPlayerDialog(playerid, munka, DIALOG_STYLE_LIST, "MunkÃ¡k", "Kamionos\nRendÅr\nSzerelÅ\nAutÃ³mata tÃ¶ltÅ\nN.A.V", "VÃ¡laszt", "MÃ©gsem");
	return 1;
}

CMD:felmond(playerid,params[])
{
	new string[128]; format(string, sizeof(string), "Sikeresen felmondtÃ¡l az Ã¡llÃ¡sodbÃ³l!");
	SetPVarInt(playerid, "Frakcio", 0);
	SendClientMessage(playerid, GREEN, string);
	SendClientMessage(playerid, ORANGE, "HasznÃ¡ld a /foglalkozas parancsot egy Ãºj munka elvÃ¡llalÃ¡sÃ¡hoz!");
	SetPlayerColor(playerid, YELLOW);
	return 1;
}

CMD:fegyver(playerid,params[]){
	new weaponID;

    if(sscanf(params,"i",weaponID)) return SendClientMessage(playerid,YELLOW,"HasznÃ¡lat /fegyver [id]");
    if(weaponID<0 || weaponID>47) return SendClientMessage(playerid,RED,"1-47-ig vannak csak fegyverek!");
	GivePlayerWeapon(playerid, weaponID, 64);
	return 1;
}
//============================= HÃZ PARANCSOK=====================================
CMD:vasarol(playerid,params[])
{
	for(new i=0; i<sizeof(HazInfo); i++)
	{
		if(!HazInfo[i][h_id])continue;
		if(!IsPlayerInRangeOfPoint(playerid,2,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z]))continue;
		if(vanHaza[JatekosInfo[playerid][db_id]][0] == 0)
		{
			if(HazInfo[i][tulaj_id] == 0)
			{
			    new str[128];
			    new name[MAX_PLAYER_NAME];
			    if(JatekosInfo[playerid][Penz] < HazInfo[i][h_ar]) return SendClientMessage(playerid,RED,"Nincs elÃ©g pÃ©nzed!");
			    JatekosInfo[playerid][Penz] -= HazInfo[i][h_ar];
			    //GivePlayerMoney(playerid, -HazInfo[i][h_ar]);
				HazInfo[i][pickupid] = 1239;
				HazInfo[i][tulaj] = JatekosInfo[i][db_id];
				hazmentes(i,playerid);
				//hazupdate(i);
				GetPlayerName(playerid,name,sizeof(name));
				HazInfo[i][tulaj] = name;
				HazInfo[i][tulaj_id] = JatekosInfo[playerid][db_id];
				DestroyPickup(HazInfo[i][h_pickup]);
				HazInfo[i][h_pickup] = CreatePickup(HazInfo[i][pickupid],1,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z],-1);
				Delete3DTextLabel(HazInfo[i][h_text]);
				format(str,sizeof(str),"Tulajdonos: %s\nHÃ¡zszÃ¡m: %i\n/elad",name,HazInfo[i][h_id]);
				HazInfo[i][h_text] = Create3DTextLabel(str,YELLOW,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z],10,0,1);
				SendClientMessage(playerid,GREEN,"Sikeresen megvÃ¡sÃ¡roltad a hÃ¡zat!");
				vanHaza[JatekosInfo[playerid][db_id]][0] = 1;
				return 1;
			}
			return SendClientMessage(playerid,RED,"Ez a hÃ¡z nem eladÃ³!");
		}
		else return SendClientMessage(playerid,RED,"MÃ¡r van hÃ¡zad!");
	}
	return 1;
}

CMD:elad(playerid,params[])
{

	for(new i=0; i<sizeof(HazInfo); i++)
	{
		if(!HazInfo[i][h_id])continue;
		if(!IsPlayerInRangeOfPoint(playerid,2,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z]))continue;
		if(HazInfo[i][tulaj_id] != 0)
		{
		    if(JatekosInfo[playerid][db_id] == HazInfo[i][tulaj_id])
		    {
		        new str[128];
		        new string[MAX_PLAYER_NAME] = "nincs tulajdonos";
		        JatekosInfo[playerid][Penz] += HazInfo[i][h_ar];
				//GivePlayerMoney(playerid,GetPlayerMoney(playerid)+HazInfo[i][h_ar]);
				SendClientMessage(playerid,GREEN,"Sikeresen eladtad a hÃ¡zat!");
				vanHaza[JatekosInfo[playerid][db_id]][0] = 0;
				HazInfo[i][tulaj] = string;
				HazInfo[i][pickupid] = 1273;
				HazInfo[i][tulaj_id] = 0;
				DestroyPickup(HazInfo[i][h_pickup]);
				Delete3DTextLabel(HazInfo[i][h_text]);
                HazInfo[i][h_pickup] = CreatePickup(HazInfo[i][pickupid],1,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z],-1);
                format(str,sizeof(str),"[ELADÃ]\nHÃ¡zszÃ¡m: %i\nÃr: %i Ft\n/vasarol",HazInfo[i][h_id],HazInfo[i][h_ar]);
				HazInfo[i][h_text] = Create3DTextLabel(str,YELLOW,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z],10,0,1);
				hazelad(i);
			}else SendClientMessage(playerid,RED,"Nem a tied a hÃ¡z!");
		}
		else SendClientMessage(playerid,RED,"Ez a hÃ¡z nem eladÃ³!");
	}
return 1;
}

CMD:belep(playerid,params[])
{
	for(new i=0; i<sizeof(HazInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z]))
		{
			SetPlayerPos(playerid, 2496.049804,-1695.238159,1014.742187);
			SetPlayerInterior(playerid, 3);
		}
	}
return 1;
}

CMD:kilep(playerid,params[])
{
	for(new i=0; i<sizeof(HazInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,2496.0095,-1692.0837,1014.7422))
		{
			SetPlayerPos(playerid,HazInfo[i][h_x],HazInfo[i][h_y],HazInfo[i][h_z]);
			SetPlayerInterior(playerid, 0);
		}
	}
return 1;
}

CMD:leakaszt(playerid,params[])
{
	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
	{
		DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
		SendClientMessage(playerid,GREEN,"VontatmÃ¡ny leakasztva!");
	}
	return 1;
}

// ADMIN COMMANDS ===============================================================
forward isAdmin(playerid,a_level);
isAdmin(playerid,a_level)
{
	if(JatekosInfo[playerid][alevel] >= a_level)return 1;
	return 0;
}

CMD:login(playerid,params[])
{
	new admin_string[128];
	if(!isAdmin(playerid,1)) return SendClientMessage(playerid,YELLOW,"Nem vagy megfelelÅ admin szinten!");
	format(admin_string, sizeof(admin_string),"LVL: %i-es Admin: %s elÃ©rhetÅ",JatekosInfo[playerid][alevel],JatekosInfo[playerid][Nev]);
	SendClientMessageToAll(YELLOW,admin_string);
	return 1;
}
//4-es Admin szint parancsok//
CMD:adminlvl(playerid,params[])
{
	new pID,a_level;
	new str[128];
	if(!isAdmin(playerid,4)) return SendClientMessage(playerid,YELLOW,"Nem vagy megfelelÅ admin szinten!");
	if(sscanf(params,"ii",pID,a_level)) return SendClientMessage(playerid,YELLOW,"HasznÃ¡lat /adminlvl [playerid] [adminszint]");
    if(IsPlayerConnected(pID))
	{
		JatekosInfo[pID][alevel] = a_level;
		format(str, sizeof(str),"Admin lvl sikeresen mÃ³dosÃ­tva %s -nek. Szintje: %i", JatekosInfo[pID][Nev], JatekosInfo[pID][alevel]);
		SendClientMessage(playerid,GREEN,str);
		format(str, sizeof(str),"Admin lettÃ©l! Kinevezett: %s Szinted: %i", JatekosInfo[playerid][Nev], JatekosInfo[pID][alevel]);
		SendClientMessage(pID,GREEN,str);
	}
	else SendClientMessage(playerid, RED, "Nincs ilyen jÃ¡tÃ©kos!");
	return 1;
}

CMD:restart(playerid,params[])
{
	new Msg[128];

	if(!isAdmin(playerid,4))return SendClientMessage(playerid,RED,"Nem vagy megfelelÅ admin szinten!");
	{
    	if (sscanf(params, "i", RestartTime))return SendClientMessage(playerid, RED, "HasznÃ¡lat: \"/restart <RestartidÅ (mÃ¡sodperc)>\"");
		if(RestartTime >= 60)
			format(Msg, 128, "A szerver ujraindul %.0f perc mulva!", RestartTime/60.0);
		else
		    format(Msg, 128, "A szerver ujraindul %d mÃ¡sodperc mulva!", RestartTime);
		GameTextForAll(Msg, 5000, 3);
		SendClientMessageToAll(LIGHTBLUE, Msg);
		SetTimer("Timer_Restart", 1000, true);
	}
	return 1;
}

forward Timer_Restart();
public Timer_Restart()
{
new Msg[128];
RestartTime--;

	if(RestartTime%60 == 0)
	{
	    if(RestartTime != 0)
			if(RestartTime >= 60)
				format(Msg, 128, "A szerver ujraindul %.0f perc mulva!", RestartTime/60.0);
			else
			    format(Msg, 128, "A szerver ujraindul %d mÃ¡sodperc mulva!", RestartTime);
		else
		    format(Msg, 128, "A szerver ujraindul!", RestartTime/60.0);
		GameTextForAll(Msg, 5000, 3);
		SendClientMessageToAll(LIGHTBLUE, Msg);
	}
	if(RestartTime <= 0)
	{
		GameTextForAll("A szerver ujraindul:Mindenkit kirug!", 5000, 3);
		for(new i=0; i<MAX_PLAYERS; i++)
		{
		    JatekosMent(i);
			//Kick(i);
			//SetTimer("Timer_Restart_Reboot", 1000 * 5, false);
		}
		SendRconCommand("gmx");
	}
return 1;
}

forward Timer_Restart_Reboot();
public Timer_Restart_Reboot()
{
	SendRconCommand("gmx");
	return 1;
}

/*CMD:ban(playerid,params[])
{
	new pID;
	new ok[64], str[128];
	new Playername[MAX_PLAYER_NAME], Adminname[MAX_PLAYER_NAME];

	if(!isAdmin(playerid,4))return SendClientMessage(playerid,RED,"Nem vagy megfelelÅ admin szinten!");
	if(sscanf(params, "us[64]", pID,ok)) return SendClientMessage(playerid, RED, "HasznÃ¡lat: /kick [playerid] [ok]");
    GetPlayerName(playerid, Adminname, sizeof(Adminname));
	GetPlayerName(pID, Playername, sizeof(Playername));
	format(str, sizeof(str), "%s ki lett bannolva! Admin: %s Ã¡ltal. Indok: %s ", Playername, Adminname, ok);
	SendClientMessageToAll(RED, str);
	Ban(pID);
	return 1;
}

CMD:unban(playerid,params[])
{
	new pID;
	if(!isAdmin(playerid,4))return SendClientMessage(playerid,RED,"Nem vagy megfelelÅ admin szinten!");
	if(sscanf(params,"u",pID)) return SendClientMessage(playerid,YELLOW,"HasznÃ¡lat /unban [playerid]");
	return 1;
}*/

CMD:kick(playerid,params[])
{
	new pID;
	new ok[64], str[128], str1[128];
	new Playername[MAX_PLAYER_NAME], Adminname[MAX_PLAYER_NAME];

	if(!isAdmin(playerid,4))return SendClientMessage(playerid,RED,"Nem vagy megfelelÅ admin szinten!");
	if(sscanf(params, "us[64]", pID,ok)) return SendClientMessage(playerid, RED, "HasznÃ¡lat: /kick [playerid] [ok]");
	if(IsPlayerConnected(pID))
	{
		GetPlayerName(playerid, Adminname, sizeof(Adminname));
		GetPlayerName(pID, Playername, sizeof(Playername));
		format(str, sizeof(str), "{FFFFFF}%s {FF0000}ki lett rÃºgva! {FF0000}Admin: {FFFFFF}%s {FF0000}Ã¡ltal. Indok: {FFFFFF}%s ", Playername, Adminname, ok);
		SendClientMessageToAll(RED, str);

		format(str1, sizeof(str1), "KirÃºgtak! {FF0000}Admin: {FFFFFF}%s. Indok: {FFFFFF}%s ",Adminname, ok);
		SendClientMessage(pID, RED, str1);
		SetTimerEx("KickStirng", 1000, false, "i", pID);
	}
	else SendClientMessage(playerid, RED, "Nincs ilyen jÃ¡tÃ©kos!");
	//Kick(pID);
	return 1;
}

CMD:tp(playerid,params[])
{
	new pID, str[128];
	new Float:aX, Float:aY, Float:aZ;
    if(!isAdmin(playerid,4))return SendClientMessage(playerid,RED,"Nem vagy megfelelÅ admin szinten!");
	if(sscanf(params, "i", pID)) return SendClientMessage(playerid, RED, "HasznÃ¡lat: /tp [playerid]");
	if(IsPlayerConnected(pID))
	{
		GetPlayerPos(playerid, aX, aY, aZ);
		SetPlayerPos(pID, aX+0.5, aY+0.5, aZ+0.5);
		format(str, sizeof(str), "TeleportÃ¡ltad %s jÃ¡tÃ©kost! ",JatekosInfo[pID][Nev]);
		SendClientMessage(playerid, GREEN, str);
		format(str, sizeof(str), "%s (lvl %i) admin teleportÃ¡lt! ",JatekosInfo[playerid][Nev], JatekosInfo[playerid][alevel]);
		SendClientMessage(pID, GREEN, str);
		SetPlayerInterior(pID,0);
	}
	else SendClientMessage(playerid, RED, "Nincs ilyen jÃ¡tÃ©kos!");
	return 1;
}

forward KickStirng(pID);
public KickStirng(pID)
{
    Kick(pID);
    return 1;
}

CMD:fagyaszt(playerid,params[])
{
	new pID;
	new str[128];
	new Playername[MAX_PLAYER_NAME];
	if(!isAdmin(playerid,2))return SendClientMessage(playerid,RED,"Nem vagy megfelelÅ admin szinten!");
	if(sscanf(params,"i",pID)) return SendClientMessage(playerid,RED,"HasznÃ¡lat: /fagyaszt [playerid]");
    if(IsPlayerConnected(pID))
	{
		GetPlayerName(pID, Playername, sizeof(Playername));
		TogglePlayerControllable(pID,false);
		format(str, sizeof(str), "Sikeresen lefagyasztottad %s -t! ",JatekosInfo[pID][Nev]);
		SendClientMessage(playerid,GREEN,str);
		SendClientMessage(pID,YELLOW,"Egy admin lefagyasztott!");
 	}
	else SendClientMessage(playerid, RED, "Nincs ilyen jÃ¡tÃ©kos!");
	return 1;
}

CMD:kienged(playerid,params[])
{
	new pID;
	new str[128];
	new Playername[MAX_PLAYER_NAME];
	if(!isAdmin(playerid,2))return SendClientMessage(playerid,RED,"Nem vagy megfelelÅ admin szinten!");
	if(sscanf(params,"i",pID)) return SendClientMessage(playerid,RED,"HasznÃ¡lat: /kienged [playerid]");
    if(IsPlayerConnected(pID))
	{
		GetPlayerName(pID, Playername, sizeof(Playername));
		TogglePlayerControllable(pID,true);
		format(str, sizeof(str), "Sikeresen kiengedted %s -t! ",JatekosInfo[pID][Nev]);
		SendClientMessage(playerid,GREEN,str);
		SendClientMessage(pID,YELLOW,"Egy admin kiengedett!");
	}
	else SendClientMessage(playerid, RED, "Nincs ilyen jÃ¡tÃ©kos!");
	return 1;
}

CMD:penzad(playerid,params[])
{
	new pID, money;
	new mstring[128];
	if(!isAdmin(playerid,2))return SendClientMessage(playerid,RED,"Nem vagy megfelelÅ admin szinten!");
	if(sscanf(params,"ii",pID,money)) return SendClientMessage(playerid,RED,"HasznÃ¡lat: /penzad [playerid][pÃ©nz]");
    if(IsPlayerConnected(pID))
	{
		JatekosInfo[playerid][Penz] += money;
		format(mstring,sizeof(mstring),"%s admintÃ³l kaptÃ¡l %d Ft-ot",JatekosInfo[playerid][Nev],money);
		SendClientMessage(pID,GREEN,mstring);
	}
	else SendClientMessage(playerid, RED, "Nincs ilyen jÃ¡tÃ©kos!");
	return 1;
}

CMD:pwl(playerid,params[])
{
	new pID;
	new plvl;
	if(!isAdmin(playerid,2))return SendClientMessage(playerid,RED,"Nem vagy megfelelÅ admin szinten!");
	if(sscanf(params,"ii",pID,plvl)) return SendClientMessage(playerid,RED,"HasznÃ¡lat: /penzad [playerid][wanted level]");
    if(IsPlayerConnected(pID))
	{
		SetPlayerWantedLevel(pID, plvl);
	}
	else SendClientMessage(playerid, RED, "Nincs ilyen jÃ¡tÃ©kos!");
	return 1;
}
// KAMIONOS COMMANDS ============================================================
CMD:munka(playerid,params[])
{
    if(GetPVarInt(playerid,"Frakcio") != 0)
	{
	    if(IsPlayerInAnyVehicle(playerid) != 0)
	    {
	        if(GetPVarInt(playerid, "mcheckp") != 0) return SendClientMessage(playerid, RED, "MÃ¡r van egy munkÃ¡d! ElÅbb azt fejezd be!");
	        new kocsiID = GetPlayerVehicleID(playerid);
	        if(GetVehicleModel(kocsiID) != 515 && GetVehicleModel(kocsiID) != 514 && GetVehicleModel(kocsiID) != 403)
			{
		        new kocsiModel = GetVehicleModel(kocsiID);
		        new munkak[1000] = "";
		        new talalt = 0;
		        new Float:x, Float:y,Float:z;
		        GetPlayerPos(playerid, x, y, z);
		        for(new i = 0; i < fuvardb; i++)
		        {
		            if(FuvarInfo[i][models] == kocsiModel)
		            {
		                if(floatsqroot((x - FuvarInfo[i][h_x]) * (x - FuvarInfo[i][h_x]) + (y - FuvarInfo[i][h_y]) * (y - FuvarInfo[i][h_y]) + (z - FuvarInfo[i][h_z]) * (z - FuvarInfo[i][h_z])) < 2000)
		                {
			                format(munkak, sizeof(munkak), "%sFuvar innen: %s - Ide: %s\n", munkak, FuvarInfo[i][h_t], FuvarInfo[i][c_t]);
			                FuvarSeged[playerid][talalt][0] = FuvarInfo[i][id];
			                //printf("%d", FuvarSeged[playerid][talalt][0]);
			                talalt++;
			          	}
		            }
		        }
		        if(talalt != 0)
		        	ShowPlayerDialog(playerid, DialogMunkak, DIALOG_STYLE_LIST, "A kÃ¶zelben lÃ©vÅ munkÃ¡k:", munkak, "Ok", "");
				else return SendClientMessage(playerid, RED, "Nincs a kÃ¶zelben munka! Menj mÃ¡sik terÃ¼letre!");
			}
			else
			{
			    if(IsTrailerAttachedToVehicle(kocsiID))
				{
				    new trailerid = GetVehicleTrailer(kocsiID);
				    new trailermodel = GetVehicleModel(trailerid);
				    new munkak[1000] = "";
			        new talalt = 0;
			        new Float:x, Float:y,Float:z;
			        GetPlayerPos(playerid, x, y, z);
			        for(new i = 0; i < fuvardb; i++)
			        {
			            if(FuvarInfo[i][models] == trailermodel)
			            {
			                if(floatsqroot((x - FuvarInfo[i][h_x]) * (x - FuvarInfo[i][h_x]) + (y - FuvarInfo[i][h_y]) * (y - FuvarInfo[i][h_y]) + (z - FuvarInfo[i][h_z]) * (z - FuvarInfo[i][h_z])) < 2000)
			                {
				                format(munkak, sizeof(munkak), "%sFuvar innen: %s - Ide: %s\n", munkak, FuvarInfo[i][h_t], FuvarInfo[i][c_t]);
				                FuvarSeged[playerid][talalt][0] = FuvarInfo[i][id];
				                //printf("%d", FuvarSeged[playerid][talalt][0]);
				                talalt++;
				          	}
			            }
			        }
			        if(talalt != 0)
			        	ShowPlayerDialog(playerid, DialogMunkak, DIALOG_STYLE_LIST, "A kÃ¶zelben lÃ©vÅ munkÃ¡k:", munkak, "Ok", "");
					else return SendClientMessage(playerid, RED, "Nincs a kÃ¶zelben munka! Menj mÃ¡sik terÃ¼letre!");
	                }
				else return SendClientMessage(playerid, RED, "Nincs trailer a kamionhoz csatolva!");
			}
	   	}else return SendClientMessage(playerid, RED, "Nem Ã¼lsz munkajÃ¡rmÅ±ben!");
	}
	else return SendClientMessage(playerid, RED, "MÃ©g nem vÃ¡lasztottÃ¡l munkÃ¡t!");
	return 1;
}

Dialog_Munka(playerid, response, listitem)
{
	if(response == 1)
	{
	    SendClientMessage(playerid, GREEN, "A fuvar bejelÃ¶lve a tÃ©rkÃ©pen, menj oda Ã©s pakold fel az Ã¡rut!");
	    for(new i = 0; i < fuvardb; i++)
	    {
			if(FuvarInfo[i][id] == FuvarSeged[playerid][listitem][0])
			{
	    		SetPlayerCheckpoint(playerid, FuvarInfo[i][h_x], FuvarInfo[i][h_y], FuvarInfo[i][h_z], 3.0);
	    		PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
	    		SetPVarInt(playerid, "mcheckp",1);
				SetPVarInt(playerid, "fuvarlistitem", FuvarSeged[playerid][listitem][0]);
	    	}
	    }
	}
	return 1;
}

forward munkafeltolt(playerid);
public munkafeltolt(playerid)
{
	new azon = GetPVarInt(playerid, "fuvarlistitem");
	printf("listitem: %d", azon);
	new kocsiID = GetPlayerVehicleID(playerid);
	new modelid = GetVehicleModel(kocsiID);
    for(new i = 0; i < fuvardb; i++)
    {
		if(FuvarInfo[i][id] == azon)
		{
    		SetPlayerCheckpoint(playerid, FuvarInfo[i][c_x], FuvarInfo[i][c_y], FuvarInfo[i][c_z], 3.0);
    		PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
    		SetPVarInt(playerid, "mcheckp",2);
    		TogglePlayerControllable(playerid,1);
    		SendClientMessage(playerid, GREEN, "A cÃ©lÃ¡llomÃ¡s bejelÃ¶lve a tÃ©rkÃ©pen! Menj Ã©s szÃ¡llÃ­tsd le az Ã¡rut!");
    		if(modelid == 578)
            {
                new Float:vehx, Float:vehy, Float:vehz;
      			GetVehiclePos(kocsiID, vehx, vehy, vehz);
	            rakomanyModelid[playerid][0] = CreateObject(1421, vehx, vehy, vehz, 0.0, 0.0, 0);
	            rakomanyModelid[playerid][1] = CreateObject(1421, vehx, vehy, vehz, 0.0, 0.0, 0);
	            rakomanyModelid[playerid][2] = CreateObject(1421, vehx, vehy, vehz, 0.0, 0.0, 0);
	            rakomanyModelid[playerid][3] = CreateObject(1421, vehx, vehy, vehz, 0.0, 0.0, 0);
	            AttachObjectToVehicle(rakomanyModelid[playerid][0], kocsiID, 0.0, 1.7, 0.5, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(rakomanyModelid[playerid][1], kocsiID, 0.08, 0.4, 0.5, 0.0, 0.0, 0.1);
	            AttachObjectToVehicle(rakomanyModelid[playerid][2], kocsiID, 0.04, -0.6, 0.5, 0.0, 0.0, 0.2);
	            AttachObjectToVehicle(rakomanyModelid[playerid][3], kocsiID, -0.06, -1.7, 0.5, 0.0, 0.0, -0.1);
            }
    	}
    }
	return 1;
}

forward munkalepakol(playerid);
public munkalepakol(playerid)
{
    new azon = GetPVarInt(playerid, "fuvarlistitem");
	new szoveg[128];
	new kocsiID = GetPlayerVehicleID(playerid);
	new modelid = GetVehicleModel(kocsiID);
    for(new i = 0; i < fuvardb; i++)
    {
		if(FuvarInfo[i][id] == azon)
		{
		    printf("tavolsag: %f, *100: %f", FuvarInfo[i][tav], FuvarInfo[i][tav]*100);
		    new fizu = floatround(FuvarInfo[i][tav]*100);
		    printf("fizu: %d", fizu);
    		TogglePlayerControllable(playerid,1);
    		SendClientMessage(playerid, GREEN, "Sikeresen leszÃ¡llÃ­tottad az Ã¡rut!");
    		JatekosInfo[playerid][Penz] += fizu;
    		format(szoveg, sizeof(szoveg), "FizetÃ©sed: %d Ft!", fizu);
    		SendClientMessage(playerid, GREEN, szoveg);
    		JatekosInfo[playerid][ConvoyMunkak]++;
    		if(modelid == 578)
            {
	    		DestroyObject(rakomanyModelid[playerid][0]);
		    	DestroyObject(rakomanyModelid[playerid][1]);
		    	DestroyObject(rakomanyModelid[playerid][2]);
		    	DestroyObject(rakomanyModelid[playerid][3]);
	    	}
    	}
    }
	return 1;
}
new FuvarKiszalltTimer[MAX_PLAYERS];
new FuvarKiszalltIdo[MAX_PLAYERS] = 90;
FuvarKozbenKiszallt(playerid)
{
    new azon = GetPVarInt(playerid, "fuvarlistitem");
    new kocsikell;
    for(new i = 0; i < fuvardb; i++)
    {
        if(FuvarInfo[i][id] == azon)
        {
			kocsikell = FuvarInfo[i][models];
        }
    }
    if(FuvarKiszalltTimerMehet[playerid][0] == 1)
    {
	    FuvarKiszalltTimer[playerid] = SetTimerEx("FuvarKiszallt", 1000, true, "iii", playerid, kocsikell);
	}
	return 1;
}

forward FuvarKiszallt(playerid, kocsikell);
public FuvarKiszallt(playerid, kocsikell)
{
	if(FuvarKiszalltIdo[playerid] != 0)
	{
		if(FuvarKiszalltIdo[playerid] == 90)
			SendClientMessage(playerid, RED, "KiszÃ¡lltÃ¡l a kocsibÃ³l!");
		if(IsPlayerInAnyVehicle(playerid) == 0)
		{
			new szoveg[128];
			format(szoveg, sizeof(szoveg), "Ulj vissza a munkajarmube!\nHatralevo idod: %i masodperc", FuvarKiszalltIdo[playerid]);
		    GameTextForPlayer(playerid, szoveg, 1030, 3);
		}
		else
		{
		    new idk = GetPlayerVehicleID(playerid);
		    new idkModel = GetVehicleModel(idk);
		    new trailerid;
		    if(IsTrailerAttachedToVehicle(idk))
			{
			    trailerid = GetVehicleTrailer(idk);
   			}
		    if(idkModel == kocsikell || GetVehicleModel(trailerid) == kocsikell)
		    {
		        KillTimer(FuvarKiszalltTimer[playerid]);
		        FuvarKiszalltTimerMehet[playerid][0] = 1;
		        FuvarKiszalltIdo[playerid] = 91;
		    }
		    else
		    {
		        new szoveg[128];
				format(szoveg, sizeof(szoveg), "Ulj vissza a munkajarmube!\nHatralevo idod: %i masodperc", FuvarKiszalltIdo[playerid]);
			    GameTextForPlayer(playerid, szoveg, 1030, 3);
		    }
		}
	}
	else
	{
	    DisablePlayerCheckpoint(playerid);
	    KillTimer(FuvarKiszalltTimer[playerid]);
	    SendClientMessage(playerid, RED, "Fuvar elhagyva! BÃ¼ntetÃ©sed 50.000 Ft");
	    JatekosInfo[playerid][Penz] -= 50000;
	    SetPVarInt(playerid, "mcheckp",0);
	    FuvarKiszalltTimerMehet[playerid][0] = 1;
	    FuvarKiszalltIdo[playerid] = 91;
	}
 	FuvarKiszalltIdo[playerid]--;
	return 1;
}

/*CMD:fuvar(playerid,params[])
{
if(GetPVarInt(playerid,"Frakcio") == KAMIONOS)
{
	if(IsPlayerInRangeOfPoint(playerid,4.0,2855.0481,896.8200,10.8397))
	{
		new veh = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(veh) == 498 || GetVehicleModel(veh) == 578)
		{
			new DialogString[128];
		 	format(DialogString,sizeof DialogString,"%s%d db\n%s%d db\n%s%d db",FuvarStr[0],MAX_FUVAR,FuvarStr[1],MAX_FUVAR,FuvarStr[2],MAX_FUVAR);
			ShowPlayerDialog(playerid, fuvar, DIALOG_STYLE_TABLIST,"Fuvarok",DialogString,"VÃ¡laszt","MÃ©gsem");
			SetPVarInt(playerid, "munkacheckpoint", KAMIONOS);
		}else SendClientMessage(playerid,RED,"Nem Ã¼lsz a megfelelÅ kocsiban!");
	}else SendClientMessage(playerid,RED,"Nem vagy a telepen!");
}else SendClientMessage(playerid,RED,"Nem vagy kamionos!");
return 1;
}*/

CMD:konvoly(playerid,params[])
{
new str[128];
ConvoyDB++;
if(ConvoyDB <= MAX_CONVOY)
{
	if(vanconvoy[playerid] == false)
	{
		if(GetPVarInt(playerid,"Frakcio") == KAMIONOS)
		{
			if(isinconvoy[playerid] == true) return SendClientMessage(playerid,RED,"MÃ¡r konvolyban vagy!");
			isinconvoy[playerid] = true;
			vanconvoy[playerid] = true;
			format(str, sizeof(str),"%s elindÃ­totta a(z) %i. konvolyt! /joinkonvoly",JatekosInfo[playerid][Nev],ConvoyDB);
			SendClientMessageToAll(YELLOW,str);
			SetPlayerColor(playerid, LIGHTBLUE);
		}else SendClientMessage(playerid,RED,"Nem vagy kamionos!");
	}else SendClientMessage(playerid,RED,"MÃ¡r indÃ­tottÃ¡l egy konvolyt!");
}else SendClientMessage(playerid,RED,"Nem lehet tÃ¶bb konvolyt indÃ­tani! Csatlakozz egyhez!");
return 1;
}

CMD:joinkonvoly(playerid,params[])
{
if(GetPVarInt(playerid,"Frakcio") == KAMIONOS)
{
	if(vanconvoy[playerid] == true)
	{
		if(isinconvoy[playerid] == false)
		{
	        isinconvoy[playerid] = true;
	        vanconvoy[playerid] = true;
	        SendClientMessage(playerid,GREEN,"Sikeresen csatlakoztÃ¡l a konvolyhoz!");
		}else SendClientMessage(playerid,RED,"MÃ¡r konvolyba vagy!");
	}else SendClientMessage(playerid,RED,"Nincs konvoly nem tudsz csatlakozni!");
}else SendClientMessage(playerid,RED,"Nem vagy kamionos!");
return 1;
}

CMD:leavekonvoly(playerid,params[])
{
if(GetPVarInt(playerid,"Frakcio") == KAMIONOS)
{
	if(vanconvoy[playerid] == true)
	{
		if(isinconvoy[playerid] == true)
		{
	        isinconvoy[playerid] = false;
	        SendClientMessage(playerid,GREEN,"KilÃ©ptÃ©l a konvolybÃ³l!");
		}else SendClientMessage(playerid,RED,"Nem vagy konvolyban!");
	}else SendClientMessage(playerid,RED,"Nincs konvoly nem tudsz csatlakozni!");
}else SendClientMessage(playerid,RED,"Nem vagy kamionos!");
return 1;
}

// AUTÃMATA TÃLTÅ COMMANDS ======================================================
CMD:automata(playerid,params[]){
	if(GetPVarInt(playerid,"Frakcio") == UDITOS)
	{
		new parancs[64];
		new veh = GetPlayerVehicleID(playerid);
		if(sscanf(params, "s[64]", parancs)) return SendClientMessage(playerid, YELLOW, "HasznÃ¡lat: /automata megrakod, munka, feltolt");
		{
		    if(!strcmp("megrakod", parancs, true))
			{
			    if(GetVehicleModel(veh) == 440)
				{
					if(IsPlayerInRangeOfPoint(playerid,3.0,1627.3813,1022.3831,10.8203))
					{
                        SendClientMessage(playerid,GREEN,"A jÃ¡rmÅ± felpakolva! VÃ¡lassz autÃ³matÃ¡t! (/automata munka)");
                        SetPVarInt(playerid, "Megpakolva", 1);
					}
					else
					{
						SendClientMessage(playerid,RED,"Nem vagy a megfelelÅ helyen!");
						SetPlayerCheckpoint(playerid,1627.3813,1022.3831,10.8203, 3.0);
						SetPVarInt(playerid, "munkacheckpoint", UDITOSMEGRAKOD);
					}
				}
				else SendClientMessage(playerid,RED,"Nem Ã¼lsz a megfelelÅ kocsiban!");
			}
			if(!strcmp("munka", parancs, true))
			{
			    if(GetVehicleModel(veh) == 440)
			    {
				    if(IsPlayerInRangeOfPoint(playerid,3.0,1627.3813,1022.3831,10.8203))
					{
					    if(GetPVarInt(playerid, "Megpakolva") == 1)
					    {
							ShowPlayerDialog(playerid, automatak, DIALOG_STYLE_LIST, "FeltÃ¶ltendÅ autÃ³matÃ¡k", "1. autÃ³mata\n2. autÃ³mata\n3. autÃ³mata\n4. autÃ³mata\n5. autÃ³mata\n6. autÃ³mata\n7. autÃ³mata", "VÃ¡laszt", "MÃ©gsem");
			                return 1;
			          	}else SendClientMessage(playerid,RED,"ElÅszÅr meg kell rakodnod a kocsit! (/automata megrakod)");
			        } else SendClientMessage(playerid,RED,"Vissza kell menned a telephelyre felpakolni a teherautÃ³t!");
     			} else SendClientMessage(playerid,RED,"Nem Ã¼lsz a megfelelÅ kocsiban!");
			}
			if(!strcmp("feltolt", parancs, true))
			{
			    if(KivalasztottAutomata[playerid][xCor] == 0 && KivalasztottAutomata[playerid][yCor] == 0 && KivalasztottAutomata[playerid][zCor] == 0)
			    {
			        SendClientMessage(playerid, RED, "Nem vÃ¡lasztottÃ¡l mÃ©g autÃ³matÃ¡t!");
			        return 1;
			    }
			    if(IsPlayerInAnyVehicle(playerid))
				{
					SendClientMessage(playerid, RED, "Gyalog kell odamenned az autÃ³matÃ¡hoz!");
				}
				else
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0, KivalasztottAutomata[playerid][xCor], KivalasztottAutomata[playerid][yCor], KivalasztottAutomata[playerid][zCor]))
					{
						new rand = random(10000);
						GetPlayerMoney(GivePlayerMoney(playerid, 3000+rand));
						new osszeg = 3000+rand;
						new msg[128];
						format(msg, sizeof(msg), "FeltÃ¶ltÃ¶tted az autÃ³matÃ¡t. FizetÃ©sed: %d", osszeg);
						SendClientMessage(playerid, YELLOW, msg);
						//GameTextForPlayer(playerid, "Lepakolas", 3000, 3);
						SetPVarInt(playerid, "feltoltve", 0);
						KivalasztottAutomata[playerid][xCor] = 0;
					    KivalasztottAutomata[playerid][yCor] = 0;
					    KivalasztottAutomata[playerid][zCor] = 0;
                        SetPVarInt(playerid, "Megpakolva", 0);
					}
					else
					{
					    printf("%f, %f, %f", KivalasztottAutomata[playerid][xCor], KivalasztottAutomata[playerid][yCor], KivalasztottAutomata[playerid][zCor]);
					    SendClientMessage(playerid,RED,"Nem vagy a kivÃ¡lasztott autÃ³matÃ¡nÃ¡l!");
					    SetPlayerCheckpoint(playerid,KivalasztottAutomata[playerid][xCor], KivalasztottAutomata[playerid][yCor], KivalasztottAutomata[playerid][zCor], 3.0);
					    SetPVarInt(playerid, "munkacheckpoint", UDITOSMEGRAKOD);
					}
				}
			}
		}
	}
	else SendClientMessage(playerid,RED,"Nem vagy autÃ³mata feltÃ¶ltÅ!");
	return 1;
}

// AUTÃ SZERELÃ COMMANDS ========================================================
CMD:vontat(playerid)
{
	if(GetPVarInt(playerid,"Frakcio") != SZERELO) return SendClientMessage(playerid, RED, "Nem vagy autÃ³ szerelÅ!");
	new Float:pX,Float:pY,Float:pZ;
	GetPlayerPos(playerid,pX,pY,pZ);
	new Float:vX,Float:vY,Float:vZ;
	new Found=0;
	new vid=0;
	while((vid < 50)&&(!Found))
    {
	    vid++;
	    GetVehiclePos(vid,vX,vY,vZ);
	    if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
	   	{
			Found=1;
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			{
				DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
			}
			AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
			SendClientMessage(playerid, GREEN,"AutÃ³ felakasztva");
		}
	}
	if (!Found){
		SendClientMessage(playerid,RED,"Nincs autÃ³ a kÃ¶zelben!");
	}
return 1;
}

CMD:javit(playerid)
{
	if(GetPVarInt(playerid,"Frakcio") == SZERELO)
	{
		if(IsPlayerInRangeOfPoint(playerid,5.0,2280.5300,552.1323,8.4859) || IsPlayerInRangeOfPoint(playerid,5.0,2270.2163,553.1853,7.6141) || IsPlayerInRangeOfPoint(playerid,5.0,2259.7822,553.2619,7.6161))
		{
		    if(IsPlayerInAnyVehicle(playerid) == 0)
		    {
			    new voltkocsi = false;
			    new Float:Xpos, Float:Ypos, Float:Zpos;
				for(new a = 0; a <= AutoCount; a++)
				{
					GetVehiclePos(a, Xpos, Ypos, Zpos);
					if(IsPlayerInRangeOfPoint(playerid, 4.0, Xpos, Ypos, Zpos))
					{
					    //printf("%i, %f, %f, %f", a, Xpos, Ypos, Zpos);
					    voltkocsi = true;
						new Float:health;
						GetVehicleHealth(a,health);
						if(health == 1000)return SendClientMessage(playerid,RED, "Az autÃ³t mÃ¡r nem kell javÃ­tani.");
						SetVehicleHealth(a, 1000.0);
						RepairVehicle(a);
						SendClientMessage(playerid,GREEN, "AutÃ³ megjavÃ­tva!");
						JatekosInfo[playerid][SzereloMunkak]++;
					}
					//else SendClientMessage(playerid,RED, "Nem vagy kocsi kÃ¶zelÃ©ben!");
				}
				if(!voltkocsi){
					SendClientMessage(playerid,RED, "Nem vagy kocsi kÃ¶zelÃ©ben!");
				}
			}else SendClientMessage(playerid,RED, "Nem Ã¼lhetsz a kocsiban javÃ­tÃ¡skor! MellÃ© kell Ã¡llnod!");
		}else SendClientMessage(playerid,RED, "Nem vagy a mÅ±helyben!");
	}
	else SendClientMessage(playerid,RED, "Te nem vagy szerelÅ!");
	return 1;
}

/*CMD:motorhazteto(playerid,params[])
{
	new vid1 = GetPlayerVehicleID(playerid);
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vid1, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vid1, engine, lights, alarm, doors, 1, boot, objective),SendClientMessage(playerid,GREEN, "MotorhÃ¡ztetÅ nyitva");
	return 1;
}*/
// RENDÅR COMMANDS =============================================================
forward jailtime(giveplayerid);
public jailtime(giveplayerid)
{
	SendClientMessage(giveplayerid,ORANGE,"Kiengedtek a bÃ¶rtÃ¶nbÅl!");
	SetPlayerPos(giveplayerid,2290.1577,2429.2410,10.8203);
	SetPlayerFacingAngle(giveplayerid,267.4325);
	SetPVarInt(giveplayerid, "Jailed", 0);
 	SetPlayerInterior(giveplayerid,0);
	return 1;
}

CMD:lecsuk(playerid,params[])
{
	new giveplayerid, Float:pos[3];
	if(sscanf(params,"i",giveplayerid)) return SendClientMessage(playerid,RED,"HasznÃ¡lat: /lecsuk [jÃ¡tÃ©kos id]");
	if(GetPVarInt(playerid,"Frakcio") != RENDOR) return SendClientMessage(playerid,RED,"Nem vagy rendÅr te nem csukhatsz le senkit!");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid,RED,"A jÃ¡tÃ©kos nincs csatlakozva nem tudod lecsukni.");
	GetPlayerPos(giveplayerid, pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, RED, "A jÃ¡tÃ©kos nincs kÃ¶zeledben!");
	new pwl = GetPlayerWantedLevel(giveplayerid);
	if(pwl == 1)
	{
		SetPVarInt(giveplayerid, "Jailed", 1);
        SetTimerEx("jailtime", 10000,0,"i",giveplayerid);
        new rnd = random(sizeof(JailSpawnPoints));
	 	SetPlayerPos(giveplayerid,JailSpawnPoints[rnd][0],JailSpawnPoints[rnd][1],JailSpawnPoints[rnd][2]);
	 	SetPlayerInterior(giveplayerid,3);
	}
	if(pwl == 2)
	{
		SetPVarInt(giveplayerid, "Jailed", 1);
        SetTimerEx("jailtime", 20000,0,"i",giveplayerid);
        new rnd = random(sizeof(JailSpawnPoints));
	 	SetPlayerPos(giveplayerid,JailSpawnPoints[rnd][0],JailSpawnPoints[rnd][1],JailSpawnPoints[rnd][2]);
	 	SetPlayerInterior(giveplayerid,3);
	}
	if(pwl == 3)
	{
		SetPVarInt(giveplayerid, "Jailed", 1);
        SetTimerEx("jailtime", 30000,0,"i",giveplayerid);
        new rnd = random(sizeof(JailSpawnPoints));
	 	SetPlayerPos(giveplayerid,JailSpawnPoints[rnd][0],JailSpawnPoints[rnd][1],JailSpawnPoints[rnd][2]);
	 	SetPlayerInterior(giveplayerid,3);
	}
	if(pwl == 4)
	{
		SetPVarInt(giveplayerid, "Jailed", 1);
        SetTimerEx("jailtime", 40000,0,"i",giveplayerid);
        new rnd = random(sizeof(JailSpawnPoints));
	 	SetPlayerPos(giveplayerid,JailSpawnPoints[rnd][0],JailSpawnPoints[rnd][1],JailSpawnPoints[rnd][2]);
	 	SetPlayerInterior(giveplayerid,3);
	}
	if(pwl == 5)
	{
		SetPVarInt(giveplayerid, "Jailed", 1);
        SetTimerEx("jailtime", 50000,0,"i",giveplayerid);
        new rnd = random(sizeof(JailSpawnPoints));
	 	SetPlayerPos(giveplayerid,JailSpawnPoints[rnd][0],JailSpawnPoints[rnd][1],JailSpawnPoints[rnd][2]);
	 	SetPlayerInterior(giveplayerid,3);
	}
	if(pwl == 6)
	{
		SetPVarInt(giveplayerid, "Jailed", 1);
        SetTimerEx("jailtime", 60000,0,"i",giveplayerid);
        new rnd = random(sizeof(JailSpawnPoints));
	 	SetPlayerPos(giveplayerid,JailSpawnPoints[rnd][0],JailSpawnPoints[rnd][1],JailSpawnPoints[rnd][2]);
	 	SetPlayerInterior(giveplayerid,3);
	}
	return 1;
}

forward buntetesfelold(playerid);
public buntetesfelold(playerid)
{
	buntiszabad[playerid] = true;
}

//====================================DIALOG_FÃ¼ggvÃ©nyek=====================================
Dialog_BankOptions(playerid, response, listitem)
{
	if(!response) return 1;
	new DialogMsg[500];
	switch (listitem)
	{
	    case 0:
		{
		    format(DialogMsg, sizeof(DialogMsg), "{FFFFFF}PÃ©nzed: {0FA0D1}%i Ft\n", JatekosInfo[playerid][Penz]);
		    format(DialogMsg, sizeof(DialogMsg), "%s{FFFFFF}Bankban lÃ©vÅ pÃ©nzed: {0FA0D1}%i Ft\n \n", DialogMsg, JatekosInfo[playerid][BankMoney]);
		    format(DialogMsg, sizeof(DialogMsg), "%s{FFFFFF}Ãrd be az Ã¶sszeget amennyit beszeretnÃ©l tenni a bankba:", DialogMsg);
			ShowPlayerDialog(playerid, DialogBankDeposit, DIALOG_STYLE_INPUT, "Ãrd be a pÃ©nz Ã¶szeget", DialogMsg, "Rendben", "MÃ©gsem");
		}
	    case 1:
		{
		    if (JatekosInfo[playerid][BankMoney] > 0)
		    {
			    format(DialogMsg, sizeof(DialogMsg), "{FFFFFF}PÃ©nzed: {0FA0D1}%i Ft\n", JatekosInfo[playerid][Penz]);
			    format(DialogMsg, sizeof(DialogMsg), "%s{FFFFFF}Bankban lÃ©vÅ pÃ©nzed: {0FA0D1}%i Ft\n \n", DialogMsg, JatekosInfo[playerid][BankMoney]);
			    format(DialogMsg, sizeof(DialogMsg), "%s{FFFFFF}Ãrd be az Ã¶sszeget amennyit kiszeretnÃ©l venni a bankbÃ³l:", DialogMsg);
				ShowPlayerDialog(playerid, DialogBankWithdraw, DIALOG_STYLE_INPUT, "Ãrd be a pÃ©nz Ã¶szeget", DialogMsg, "Rendben", "MÃ©gsem");
			}
			else SendClientMessage(playerid, RED, "Ãres szÃ¡mlÃ¡rÃ³l nem tudsz pÃ©nzt kivenni!");
		}
	}
	return 1;
}

Dialog_BankWithdraw(playerid, response, inputtext[])
{
if(!response) return 1;
new WithdrawMoney, Msg[128];
WithdrawMoney = strval(inputtext);
	if (WithdrawMoney > 0)
	{
		if (WithdrawMoney <= JatekosInfo[playerid][BankMoney])
		{
	        JatekosInfo[playerid][BankMoney] -= WithdrawMoney;
			JatekosInfo[playerid][Penz] += WithdrawMoney;
			mysql_format(kapcs, query, sizeof(query), "UPDATE jatekosok SET Penz = %i, bankmoney = %i WHERE id = %i", JatekosInfo[playerid][Penz], JatekosInfo[playerid][BankMoney], JatekosInfo[playerid][db_id]);
			mysql_tquery(kapcs, query);
			format(Msg, 128, "{FFFFFF}KivettÃ©l a bankbÃ³l {0FA0D1}%i Ft-ot", WithdrawMoney);
			SendClientMessage(playerid, 0xFFFFFFFF, Msg);
		}
		else SendClientMessage(playerid, RED, "Ennyi pÃ©nz nincs a bankban!");
	}
	else SendClientMessage(playerid, RED, "NegatÃ­v Ã¶sszeget nem tudsz kivenni!");
return 1;
}

Dialog_BankDeposit(playerid, response, inputtext[])
{
if(!response) return 1;
new DepositMoney, Msg[128];
DepositMoney = strval(inputtext);
	if (DepositMoney > 0)
	{
		if (DepositMoney <= JatekosInfo[playerid][Penz])
		{
	        JatekosInfo[playerid][BankMoney] += DepositMoney;
			JatekosInfo[playerid][Penz] -= DepositMoney;
			mysql_format(kapcs, query, sizeof(query), "UPDATE jatekosok SET Penz = %i, bankmoney = %i WHERE id = %i", JatekosInfo[playerid][Penz], JatekosInfo[playerid][BankMoney], JatekosInfo[playerid][db_id]);
			mysql_tquery(kapcs, query);
			format(Msg, 128, "{FFFFFF}BetettÃ©l a bankba {0FA0D1}%i Ft-ot", DepositMoney);
			SendClientMessage(playerid, 0xFFFFFFFF, Msg);
		}
		else SendClientMessage(playerid, RED, "Nincs elÃ©g pÃ©nzed amit betehetnÃ©l a bankba!");
	}
	else SendClientMessage(playerid, RED, "NegatÃ­v Ã¶sszeget nem tudsz betenni!");
return 1;
}

Dialog_Fuvar(playerid, response, listitem)
{
if(!response) return 1;
switch(listitem)
{
	case 0:
	{
	if(GetPVarInt(playerid, "Frakcio") == KAMIONOS)
		{
		if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
                new vehicleid = GetPlayerVehicleID(playerid);
                new modelid = GetVehicleModel(vehicleid);
                if(modelid == 578)
                {
                    new Float:vehx, Float:vehy, Float:vehz;
          			GetVehiclePos(vehicleid, vehx, vehy, vehz);
		            rakomanyModelid[playerid][0] = CreateObject(1421, vehx, vehy, vehz, 0.0, 0.0, 0);
		            rakomanyModelid[playerid][1] = CreateObject(1421, vehx, vehy, vehz, 0.0, 0.0, 0);
		            rakomanyModelid[playerid][2] = CreateObject(1421, vehx, vehy, vehz, 0.0, 0.0, 0);
		            rakomanyModelid[playerid][3] = CreateObject(1421, vehx, vehy, vehz, 0.0, 0.0, 0);
		            AttachObjectToVehicle(rakomanyModelid[playerid][0], vehicleid, 0.0, 1.7, 0.5, 0.0, 0.0, 0.0);
		            AttachObjectToVehicle(rakomanyModelid[playerid][1], vehicleid, 0.08, 0.4, 0.5, 0.0, 0.0, 0.1);
		            AttachObjectToVehicle(rakomanyModelid[playerid][2], vehicleid, 0.04, -0.6, 0.5, 0.0, 0.0, 0.2);
		            AttachObjectToVehicle(rakomanyModelid[playerid][3], vehicleid, -0.06, -1.7, 0.5, 0.0, 0.0, -0.1);
                }
				SendClientMessage(playerid, GREEN, "Kamion feltÃ¶ltve, viheted!");
				SetPlayerCheckpoint(playerid,2515.8086,2823.8035,11.4108, 6.0);
				SetPVarInt(playerid,"Feltoltve",1);
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a kamiont!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol kamionoskÃ©nt!");
	}
	case 1:
	{
	if(GetPVarInt(playerid, "Frakcio") == KAMIONOS)
		{
		if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
				SendClientMessage(playerid, GREEN, "Kamion feltÃ¶ltve, viheted!");
				SetPVarInt(playerid,"Feltoltve",0);
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a kamiont!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol kamionoskÃ©nt!");
	}
	case 2:
	{
	if(GetPVarInt(playerid, "Frakcio") == KAMIONOS)
		{
		if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
				SendClientMessage(playerid, GREEN, "Kamion feltÃ¶ltve, viheted!");
				SetPVarInt(playerid,"Feltoltve",0);
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a kamiont!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol kamionoskÃ©nt!");
	}
}
return 1;
}

Dialog_Munkak(playerid, response, listitem)
{
if(!response) return 1;
	switch(listitem)
	{
		case 0:
		{
		if(GetPVarInt(playerid, "Frakcio") == 0)
		    {
		        SendClientMessage(playerid, ORANGE, "A kamionos munkÃ¡t vÃ¡lasztottad!");
		        SendClientMessage(playerid, ORANGE, "HasznÃ¡ld a /felmond parancsot mÃ¡sik munka vÃ¡lasztÃ¡sÃ¡hoz!");
				SetPVarInt(playerid, "Frakcio", KAMIONOS);
				SetPlayerColor(playerid, YELLOW);
			}else SendClientMessage(playerid, RED, "Nem lehet egyszerre kÃ©t munkÃ¡d!");
		}

		case 1:
		{
		if(GetPVarInt(playerid, "Frakcio") == 0)
		    {
		        SendClientMessage(playerid, ORANGE, "A rendÅr munkÃ¡t vÃ¡lasztottad!");
		        SendClientMessage(playerid, ORANGE, "HasznÃ¡ld a /felmond parancsot mÃ¡sik munka vÃ¡lasztÃ¡sÃ¡hoz!");
				SetPVarInt(playerid, "Frakcio", RENDOR);
				SetPlayerColor(playerid, BLUE);
			}else SendClientMessage(playerid, RED, "Nem lehet egyszerre kÃ©t munkÃ¡d!");
		}
		case 2:
		{
		if(GetPVarInt(playerid, "Frakcio") == 0)
		    {
		        SendClientMessage(playerid, ORANGE, "A szerelÅ munkÃ¡t vÃ¡lasztottad!");
		        SendClientMessage(playerid, ORANGE, "HasznÃ¡ld a /felmond parancsot mÃ¡sik munka vÃ¡lasztÃ¡sÃ¡hoz!");
				SetPVarInt(playerid, "Frakcio", SZERELO);
				SetPlayerColor(playerid, GREY);
			}else SendClientMessage(playerid, RED, "Nem lehet egyszerre kÃ©t munkÃ¡d!");
		}
		case 3:
		{
		if(GetPVarInt(playerid, "Frakcio") == 0)
		    {
		        SendClientMessage(playerid, ORANGE, "Az autÃ³mata tÃ¶ltÅ munkÃ¡t vÃ¡lasztottad!");
		        SendClientMessage(playerid, ORANGE, "HasznÃ¡ld a /felmond parancsot mÃ¡sik munka vÃ¡lasztÃ¡sÃ¡hoz!");
				SetPVarInt(playerid, "Frakcio", UDITOS);
				KivalasztottAutomata[playerid][xCor] = 0;
			    KivalasztottAutomata[playerid][yCor] = 0;
			    KivalasztottAutomata[playerid][zCor] = 0;
			    SetPVarInt(playerid, "Megpakolva", 0);
			    SetPlayerColor(playerid, YELLOW);
			}else SendClientMessage(playerid, RED, "Nem lehet egyszerre kÃ©t munkÃ¡d!");
		}
	}
return 1;
}

Dialog_Automatas(playerid, response, listitem)
{
if(!response) return 1;
switch(listitem)
{
    case 0:
    {
    	if(GetPVarInt(playerid, "Frakcio") == UDITOS)
		{
			if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
				SendClientMessage(playerid, GREEN, "A teherautÃ³ feltÃ¶ltve, viheted!");
				SetPlayerCheckpoint(playerid,1659.4502,1721.8760,10.8281, 4.0);
				SetPVarInt(playerid,"Feltoltve",1);
				SetPVarInt(playerid, "munkacheckpoint", UDITOS);
				KivalasztottAutomata[playerid][xCor] = 1659.4502;
				KivalasztottAutomata[playerid][yCor] = 1721.8760;
				KivalasztottAutomata[playerid][zCor] = 10.8281;
				printf("%f, %f, %f", KivalasztottAutomata[playerid][xCor], KivalasztottAutomata[playerid][yCor], KivalasztottAutomata[playerid][zCor]);
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a teherautÃ³t!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol autÃ³mata tÃ¶ltÅkÃ©nt!");
    }
    case 1:
    {
        if(GetPVarInt(playerid, "Frakcio") == UDITOS)
		{
			if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
				SendClientMessage(playerid, GREEN, "A teherautÃ³ feltÃ¶ltve, viheted!");
				SetPlayerCheckpoint(playerid,2320.1497,2531.4885,10.8203, 4.0);
				SetPVarInt(playerid,"Feltoltve",1);
				SetPVarInt(playerid, "munkacheckpoint", UDITOS);
				KivalasztottAutomata[playerid][xCor] = 2320.1497;
				KivalasztottAutomata[playerid][yCor] = 2531.4885;
				KivalasztottAutomata[playerid][zCor] = 10.8203;
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a teherautÃ³t!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol autÃ³mata tÃ¶ltÅkÃ©nt!");
    }
    case 2:
    {
        if(GetPVarInt(playerid, "Frakcio") == UDITOS)
		{
			if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
				SendClientMessage(playerid, GREEN, "A teherautÃ³ feltÃ¶ltve, viheted!");
				SetPlayerCheckpoint(playerid,1437.2535,2656.8918,11.3926, 4.0);
				SetPVarInt(playerid,"Feltoltve",1);
				SetPVarInt(playerid, "munkacheckpoint", UDITOS);
				KivalasztottAutomata[playerid][xCor] = 1437.2535;
				KivalasztottAutomata[playerid][yCor] = 2656.8918;
				KivalasztottAutomata[playerid][zCor] = 11.3926;
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a teherautÃ³t!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol autÃ³mata tÃ¶ltÅkÃ©nt!");
    }
    case 3:
    {
        if(GetPVarInt(playerid, "Frakcio") == UDITOS)
		{
			if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
				SendClientMessage(playerid, GREEN, "A teherautÃ³ feltÃ¶ltve, viheted!");
				SetPlayerCheckpoint(playerid,1437.1471,2655.3579,11.3926, 4.0);
				SetPVarInt(playerid,"Feltoltve",1);
				SetPVarInt(playerid, "munkacheckpoint", UDITOS);
				KivalasztottAutomata[playerid][xCor] = 1437.1471;
				KivalasztottAutomata[playerid][yCor] = 2655.3579;
				KivalasztottAutomata[playerid][zCor] = 11.3926;
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a teherautÃ³t!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol autÃ³mata tÃ¶ltÅkÃ©nt!");
    }
    case 4:
    {
        if(GetPVarInt(playerid, "Frakcio") == UDITOS)
		{
			if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
				SendClientMessage(playerid, GREEN, "A teherautÃ³ feltÃ¶ltve, viheted!");
				SetPlayerCheckpoint(playerid,1398.7701,2223.6455,11.0234, 4.0);
				SetPVarInt(playerid,"Feltoltve",1);
				SetPVarInt(playerid, "munkacheckpoint", UDITOS);
				KivalasztottAutomata[playerid][xCor] = 1398.7701;
				KivalasztottAutomata[playerid][yCor] = 2223.6455;
				KivalasztottAutomata[playerid][zCor] = 11.0234;
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a teherautÃ³t!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol autÃ³mata tÃ¶ltÅkÃ©nt!");
    }
    case 5:
    {
        if(GetPVarInt(playerid, "Frakcio") == UDITOS)
		{
			if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
				SendClientMessage(playerid, GREEN, "A teherautÃ³ feltÃ¶ltve, viheted!");
				SetPlayerCheckpoint(playerid,1518.9700,1055.2993,10.8203, 4.0);
				SetPVarInt(playerid,"Feltoltve",1);
				SetPVarInt(playerid, "munkacheckpoint", UDITOS);
				KivalasztottAutomata[playerid][xCor] = 1518.9700;
				KivalasztottAutomata[playerid][yCor] = 1055.2993;
				KivalasztottAutomata[playerid][zCor] = 10.8203;
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a teherautÃ³t!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol autÃ³mata tÃ¶ltÅkÃ©nt!");
    }
    case 6:
    {
        if(GetPVarInt(playerid, "Frakcio") == UDITOS)
		{
			if(GetPVarInt(playerid, "Feltoltve") == 0)
            {
				SendClientMessage(playerid, GREEN, "A teherautÃ³ feltÃ¶ltve, viheted!");
				SetPlayerCheckpoint(playerid,2647.7634,1128.4183,11.1797, 4.0);
				SetPVarInt(playerid,"Feltoltve",1);
				SetPVarInt(playerid, "munkacheckpoint", UDITOS);
				KivalasztottAutomata[playerid][xCor] = 2647.7634;
				KivalasztottAutomata[playerid][yCor] = 1128.4183;
				KivalasztottAutomata[playerid][zCor] = 11.1797;
			}else SendClientMessage(playerid, RED, "MÃ¡r feltÃ¶ltÃ¶ttÃ©k a teherautÃ³t!");
		}else SendClientMessage(playerid, RED, "Nem dolgozol autÃ³mata tÃ¶ltÅkÃ©nt!");
    }
}
return 1;
}

Dialog_Regisztracio(playerid, response, inputtext[])
{
	{
        if(!response) return Kick(playerid);
        if(strlen(inputtext) < 5 || strlen(inputtext) > 32) return ShowPlayerDialog(playerid, d_reg, DIALOG_STYLE_PASSWORD, "RegisztrÃ¡ciÃ³", "{FFFFFF}Ãdv a szerveren!\nMÃ©g nem regisztrÃ¡ltÃ¡l!\nKÃ©rlek adj meg egy megjegyezheto Ã©s eros jelszÃ³t!\n\n{FF0000}Jelszavadnak 5-32 karakter kÃ¶zÃ¶tt kell lennie!", "RegisztrÃ¡l", "KilÃ©p");
        mysql_format(kapcs, query, 256, "INSERT INTO jatekosok (Nev,Jelszo,Penz,X,Y,Z) VALUES ('%e',SHA1('%e'),'0',-1980.6168,141.2433,27.6875)", JatekosInfo[playerid][Nev], inputtext);
        mysql_tquery(kapcs, query, "JatekosBeregelt", "d", playerid);
    }
return 1;
}

Dialog_Belepes(playerid, response, inputtext[])
{
	{
        if(!response) return Kick(playerid);
        if(strlen(inputtext) < 5 || strlen(inputtext) > 32) return ShowPlayerDialog(playerid, d_belep, DIALOG_STYLE_PASSWORD, "BejelentkezÃ©s", "{FFFFFF}Ãdv a szerveren!\nMÃ¡r regisztrÃ¡ltÃ¡l!\nKÃ©rlek add meg a jelszavad, amivel regisztrÃ¡ltÃ¡ltÃ¡l!\n\n{FF0000}Jelszavadnak 5-32 karakter kÃ¶zÃ¶tt kell lennie!", "BelÃ©p", "KilÃ©p");
        mysql_format(kapcs, query, 256, "SELECT * FROM jatekosok WHERE Nev='%e' AND Jelszo=SHA1('%e')", JatekosInfo[playerid][Nev], inputtext);
        mysql_tquery(kapcs, query, "JatekosBelep", "d", playerid);
    }
return 1;
}
//=====================================================AUTÃ KERESKEDÃS===============================================================================
Dialog_DialogAutoKer(playerid, response, listitem)
{
if(!response) return 1;
switch(listitem)
	{
    case 0:
	    {
			CarList_Create(playerid);
	 	}
	}
	return 1;
}

stock CarList_Create(playerid)
{
	// Setup local variables
	new Counter, CarList[500];

	// Only add 10 cars to the list, starting from the FirstCar
	for (new i = JatekosInfo[playerid][ElsoTizKocsi]; i < sizeof(ABuyableVehicles); i++)
	{
		// Increase a counter (which holds the number of cars that have been added to the list
		Counter++;

		// Check if the maximum hasn't been reached yet
		if (Counter <= 10)
		{
		    // Add the carname to the list
		    if (strlen(CarList) == 0) // If this is the start of the list (no cars have been added yet)
				format(CarList, 500, "%s - {0FA0D1}%d Ft", ABuyableVehicles[i][CarName],ABuyableVehicles[i][Price]); // Add the name of the car at the start of the carlist
		    else
				format(CarList, 500, "%s%s%s - {0FA0D1}%d Ft", CarList, "\n", ABuyableVehicles[i][CarName],ABuyableVehicles[i][Price]); // Add the name of the next car to the list on the next line
		}
		else
		{
		    // KÃ¶vetkezÅ 10 kocsi
			format(CarList, 500, "%s%s%s", CarList, "\n \n", "KÃ¶vetkezÅ");
			break;
		}
	}
	ShowPlayerDialog(playerid, DialogAutok, DIALOG_STYLE_LIST, "AutoKereskedÃ©s", CarList, "Megvesz","MÃ©gsem");
	return 1;
}

Dialog_AutoKereskedes(playerid, response, listitem)
{
new kocsi[500];
if(!response)
	{
        JatekosInfo[playerid][ElsoTizKocsi] =0;
        return 1;
	}
	
	switch(listitem)
		{
	    case 10:
		    {
				CarList_Create(playerid);
				return 1;
		 	}
		case 11:
		    {
				JatekosInfo[playerid][ElsoTizKocsi] += 10;
				CarList_Create(playerid);
			}
		default:
		    {
		        new CarIndex;
		    	CarIndex = JatekosInfo[playerid][ElsoTizKocsi] + listitem;
		    	format(kocsi, 128, "{00FF00}Megvetted a(z){FFFF00} %s {00FF00} %d {FFFF00}Ft-Ã©rt{00FF00}.", ABuyableVehicles[CarIndex][CarName], ABuyableVehicles[CarIndex][Price]);
		    	SendClientMessage(playerid, GREEN, kocsi);
		    	JatekosInfo[playerid][Penz] -= ABuyableVehicles[CarIndex][Price];
		    	CreateVehicle(ABuyableVehicles[CarIndex][CarModel], 1649.3289,2197.2869,10.5474, 82.2873, -1, -1, -1);
		    	JatekosInfo[playerid][ElsoTizKocsi] =0;
		    	
			}
		}
	return 1;
}

//gps
forward GPS();
public GPS()
{
	new str[256];
    for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
		{
		    if(GPS_Spawned[i] == 1)
		    {
	    		format(str,sizeof(str),"%s", GetPlayerArea(i));
				TextDrawSetString(gps[i], str);
				TextDrawShowForPlayer(i, gps[i]);
			}
			else
			{
			    TextDrawHideForPlayer(i, gps[i]);
			}
		}
	}
	return 1;
}

stock GetPlayerArea(playerid)
{
	new str[130];
	format(str,sizeof(str),"%s",Zones[GetPlayerZone(playerid)][zone_name]);
	return str;
}

stock GetPlayerZone(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	for(new i=0;i<sizeof(Zones);i++)
	{
		if(x > Zones[i][zone_minx] && y > Zones[i][zone_miny] && z > Zones[i][zone_minz] && x < Zones[i][zone_maxx] && y < Zones[i][zone_maxy] && z < Zones[i][zone_maxz])
		return i;
	}
	return false;
}
//gps

//SebessÃ©g mÃ©rÅ
Sebessegmero_Beallitas(playerid)
{
	/*AutoInfo[playerid][FuelText] = TextDrawCreate(460.0, 405.0, " ");
	AutoInfo[playerid][SpeedText] = TextDrawCreate(460.0, 390.0, " ");*/
	AutoInfo[playerid][StatText] = TextDrawCreate(519.575622, 357.916748, " ");
	AutoInfo[playerid][FuelText] = TextDrawCreate(519.575866, 373.166809, " ");
	AutoInfo[playerid][SpeedText] = TextDrawCreate(519.575866, 388.916595, " ");
	
	// BeÃ¡llÃ­tÃ¡sok
	TextDrawSetShadow(AutoInfo[playerid][StatText], 0);
    TextDrawUseBox(AutoInfo[playerid][StatText], 1);
    TextDrawBoxColor(AutoInfo[playerid][StatText], 255);
    TextDrawAlignment(AutoInfo[playerid][StatText], 1);
    TextDrawLetterSize(AutoInfo[playerid][StatText], 0.317070, 1.255831);
	TextDrawTextSize(AutoInfo[playerid][StatText], 628.587646, 0.000000);
	
	TextDrawSetShadow(AutoInfo[playerid][SpeedText], 0);
	TextDrawUseBox(AutoInfo[playerid][SpeedText], 1);
    TextDrawBoxColor(AutoInfo[playerid][SpeedText], 255);
    TextDrawAlignment(AutoInfo[playerid][SpeedText], 1);
    TextDrawLetterSize(AutoInfo[playerid][SpeedText], 0.317070, 1.255831);
	TextDrawTextSize(AutoInfo[playerid][SpeedText], 628.587646, 0.000000);
	
	TextDrawSetShadow(AutoInfo[playerid][FuelText], 0);
    TextDrawUseBox(AutoInfo[playerid][FuelText], 1);
    TextDrawBoxColor(AutoInfo[playerid][FuelText], 255);
    TextDrawAlignment(AutoInfo[playerid][FuelText], 1);
    TextDrawLetterSize(AutoInfo[playerid][FuelText], 0.317070, 1.255831);
	TextDrawTextSize(AutoInfo[playerid][FuelText], 628.587646, 0.000000);
	
    // Benyomatjuk a textdrawot
	TextDrawShowForPlayer(playerid, AutoInfo[playerid][SpeedText]);
	TextDrawShowForPlayer(playerid, AutoInfo[playerid][FuelText]);
	TextDrawShowForPlayer(playerid, AutoInfo[playerid][StatText]);
	// ElindÃ­tjuk a timert ami frissÃ­ti a textdrawot
	AutoInfo[playerid][BenzinTimer] = SetTimerEx("Sebessegmero_Frissites", 500, true, "i", playerid);
	AutoInfo[playerid][SebessegTimer] = SetTimerEx("Sebessegmero_Sebesseg", 50, true, "i", playerid);
	AutoInfo[playerid][StatTimer] = SetTimerEx("Sebessegmero_Stat", 50, true, "i", playerid);
	return 1;
}

Sebessegmero_Torles(playerid)
{
	// TÃ¶rÃ¶ljÃ¼k a textdrawot
	TextDrawDestroy(AutoInfo[playerid][SpeedText]);
	TextDrawDestroy(AutoInfo[playerid][FuelText]);
	TextDrawDestroy(AutoInfo[playerid][StatText]);
	// Kikapcsoljuk a timert
	KillTimer(AutoInfo[playerid][SebessegTimer]);
	KillTimer(AutoInfo[playerid][BenzinTimer]);
	KillTimer(AutoInfo[playerid][StatTimer]);
	// 0-ra csapjuk a sebessÃ©get
	AutoInfo[playerid][JatekosSebesseg] = 0;
	return 1;
}
forward Sebessegmero_Stat(playerid);
public Sebessegmero_Stat(playerid)
{
	new KocsiString[50],Status[20];
	new Float:vehicleh;
	new v = GetPlayerVehicleID(playerid);
 	GetVehicleHealth(v,vehicleh);
 	
 	if(v !=0)
 	{
	 	if(vehicleh == 1000)
		 format(Status, 20, "~g~%s", "KivÃ¡lÃ³");
	 	if(vehicleh < 1000 && vehicleh > 500)
		 format(Status, 20, "~y~%s", "JÃ³");
	 	if(vehicleh < 500 && vehicleh > 250)
		 format(Status, 20, "~r~%s", "Rossz");
	    if(vehicleh <= 250)
		 format(Status, 20, "~r~%s", "Robban!");

	 	format(KocsiString, 50, "~w~Ãllapot: %s", Status);
	    TextDrawSetString(AutoInfo[playerid][StatText], KocsiString);
    }
    else
	{
		TextDrawSetString(AutoInfo[playerid][StatText], " ");
	}
	return 1;
}

forward Sebessegmero_Sebesseg(playerid);
public Sebessegmero_Sebesseg(playerid)
{
	new vid, Float:speedx, Float:speedy, Float:speedz, Float:final_speed, speed_string[50], final_speed_int;
	
	vid = GetPlayerVehicleID(playerid);

	if(vid != 0)
	{
        GetVehicleVelocity(vid, speedx, speedy, speedz);
        final_speed = floatsqroot(((speedx * speedx) + (speedy * speedy)) + (speedz * speedz)) * 158.179;
        final_speed_int = floatround(final_speed, floatround_round); //intÃ© konverteljÃ¼k a floatot
        AutoInfo[playerid][JatekosSebesseg] = final_speed_int;

		format(speed_string, 50, "~w~SebessÃ©g: ~b~%i~w~ km/h", final_speed_int);
		TextDrawSetString(AutoInfo[playerid][SpeedText], speed_string);
	}
	else
	{
		TextDrawSetString(AutoInfo[playerid][SpeedText], " ");
		//TextDrawSetString(AutoInfo[playerid][FuelText], " ");
		AutoInfo[playerid][JatekosSebesseg] = 0;
	}
	return 1;
}

forward Sebessegmero_Frissites(playerid);
public Sebessegmero_Frissites(playerid)
{
	//new vid, Float:speedx, Float:speedy, Float:speedz, Float:final_speed, speed_string[50], final_speed_int, Float:vehiclehealth;
	new vid;
	new FuelString[50], FuelStatus[20];

	vid = GetPlayerVehicleID(playerid);

	if(vid != 0)
	{
        /*GetVehicleVelocity(vid, speedx, speedy, speedz);
        final_speed = floatsqroot(((speedx * speedx) + (speedy * speedy)) + (speedz * speedz)) * 158.179;
        final_speed_int = floatround(final_speed, floatround_round); //intÃ© konverteljÃ¼k a floatot
        AutoInfo[playerid][JatekosSebesseg] = final_speed_int;

		format(speed_string, 50, "~w~Sebess3g: ~b~%i~w~ km/h", final_speed_int);
		TextDrawSetString(AutoInfo[playerid][SpeedText], speed_string);*/

		if (GetPlayerVehicleSeat(playerid) == 0)
		if ((AutoInfo[playerid][JatekosSebesseg] > 10) && (AutoInfo[vid][Fuel] > 0))
			AutoInfo[vid][Fuel] = AutoInfo[vid][Fuel] - 1;

        if ((AutoInfo[vid][Fuel] > 0) && (AutoInfo[vid][Fuel] < 100000))
			format(FuelStatus, 20, "~g~%s~r~%s", "I", "IIIIIIIII");

		if ((AutoInfo[vid][Fuel] >= ((MaxFuel / 10) * 1)) && (AutoInfo[vid][Fuel] < ((MaxFuel / 10) * 2)))
			format(FuelStatus, 20, "~g~%s~r~%s", "II", "IIIIIIII");

		if ((AutoInfo[vid][Fuel] >= ((MaxFuel / 10) * 2)) && (AutoInfo[vid][Fuel] < ((MaxFuel / 10) * 3)))
			format(FuelStatus, 20, "~g~%s~r~%s", "III", "IIIIIII");

		if ((AutoInfo[vid][Fuel] >= ((MaxFuel / 10) * 3)) && (AutoInfo[vid][Fuel] < ((MaxFuel / 10) * 4)))
			format(FuelStatus, 20, "~g~%s~r~%s", "IIII", "IIIIII");

		if ((AutoInfo[vid][Fuel] >= ((MaxFuel / 10) * 4)) && (AutoInfo[vid][Fuel] < ((MaxFuel / 10) * 5)))
			format(FuelStatus, 20, "~g~%s~r~%s", "IIIII", "IIIII");

		if ((AutoInfo[vid][Fuel] >= ((MaxFuel / 10) * 5)) && (AutoInfo[vid][Fuel] < ((MaxFuel / 10) * 6)))
			format(FuelStatus, 20, "~g~%s~r~%s", "IIIIII", "IIII");

		if ((AutoInfo[vid][Fuel] >= ((MaxFuel / 10) * 6)) && (AutoInfo[vid][Fuel] < ((MaxFuel / 10) * 7)))
			format(FuelStatus, 20, "~g~%s~r~%s", "IIIIIII", "III");

		if ((AutoInfo[vid][Fuel] >= ((MaxFuel / 10) * 7)) && (AutoInfo[vid][Fuel] < ((MaxFuel / 10) * 8)))
			format(FuelStatus, 20, "~g~%s~r~%s", "IIIIIIII", "II");

		if ((AutoInfo[vid][Fuel] >= ((MaxFuel / 10) * 8)) && (AutoInfo[vid][Fuel] < ((MaxFuel / 10) * 9)))
			format(FuelStatus, 20, "~g~%s~r~%s", "IIIIIIIII", "I");

		if ((AutoInfo[vid][Fuel] >= ((MaxFuel / 10) * 9)) && (AutoInfo[vid][Fuel] <= MaxFuel))
			format(FuelStatus, 20, "~g~%s", "IIIIIIIIII"); // teli tank

		if (AutoInfo[vid][Fuel] == 0)
			format(FuelStatus, 20, "~r~%s", "IIIIIIIIII"); // Ã¼res tank

        format(FuelString, 50, "~w~Ãzemanyag: %s", FuelStatus);
        TextDrawSetString(AutoInfo[playerid][FuelText], FuelString);

        if(AutoInfo[vid][Fuel] == 0)
        {
			new engine,lights,alarm,doors,bonnet,boot,objective;
			GetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vid, 0, 0, alarm, doors, bonnet, boot, objective);
		}
	}
	else
	{
		//TextDrawSetString(AutoInfo[playerid][SpeedText], " ");
		TextDrawSetString(AutoInfo[playerid][FuelText], " ");
		//AutoInfo[playerid][JatekosSebesseg] = 0;
	}
	return 1;
}
